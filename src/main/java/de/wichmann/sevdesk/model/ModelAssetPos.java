/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelAssetPos
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelAssetPos {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("asset")

  private Object asset = null;

  @JsonProperty("year")

  private Integer year = null;

  @JsonProperty("depreciationAmount")

  private Float depreciationAmount = null;

  @JsonProperty("residualValue")

  private Float residualValue = null;

  @JsonProperty("month")

  private Integer month = null;

  @JsonProperty("enshrined")

  private Boolean enshrined = null;

  @JsonProperty("correction")

  private Boolean correction = null;
  public ModelAssetPos create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the asset position was created
  * @return create
  **/
  @Schema(description = "date the asset position was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelAssetPos update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the asset position was last updated
  * @return update
  **/
  @Schema(description = "date the asset position was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelAssetPos sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelAssetPos asset(Object asset) {
    this.asset = asset;
    return this;
  }

  

  /**
  * asset the asset position belongs to
  * @return asset
  **/
  @Schema(description = "asset the asset position belongs to")
  public Object getAsset() {
    return asset;
  }
  public void setAsset(Object asset) {
    this.asset = asset;
  }
  public ModelAssetPos year(Integer year) {
    this.year = year;
    return this;
  }

  

  /**
  * Get year
  * @return year
  **/
  @Schema(description = "")
  public Integer getYear() {
    return year;
  }
  public void setYear(Integer year) {
    this.year = year;
  }
  public ModelAssetPos depreciationAmount(Float depreciationAmount) {
    this.depreciationAmount = depreciationAmount;
    return this;
  }

  

  /**
  * Get depreciationAmount
  * @return depreciationAmount
  **/
  @Schema(description = "")
  public Float getDepreciationAmount() {
    return depreciationAmount;
  }
  public void setDepreciationAmount(Float depreciationAmount) {
    this.depreciationAmount = depreciationAmount;
  }
  public ModelAssetPos residualValue(Float residualValue) {
    this.residualValue = residualValue;
    return this;
  }

  

  /**
  * Get residualValue
  * @return residualValue
  **/
  @Schema(description = "")
  public Float getResidualValue() {
    return residualValue;
  }
  public void setResidualValue(Float residualValue) {
    this.residualValue = residualValue;
  }
  public ModelAssetPos month(Integer month) {
    this.month = month;
    return this;
  }

  

  /**
  * Get month
  * @return month
  **/
  @Schema(description = "")
  public Integer getMonth() {
    return month;
  }
  public void setMonth(Integer month) {
    this.month = month;
  }
  public ModelAssetPos enshrined(Boolean enshrined) {
    this.enshrined = enshrined;
    return this;
  }

  

  /**
  * Get enshrined
  * @return enshrined
  **/
  @Schema(description = "")
  public Boolean isEnshrined() {
    return enshrined;
  }
  public void setEnshrined(Boolean enshrined) {
    this.enshrined = enshrined;
  }
  public ModelAssetPos correction(Boolean correction) {
    this.correction = correction;
    return this;
  }

  

  /**
  * Get correction
  * @return correction
  **/
  @Schema(description = "")
  public Boolean isCorrection() {
    return correction;
  }
  public void setCorrection(Boolean correction) {
    this.correction = correction;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelAssetPos modelAssetPos = (ModelAssetPos) o;
    return Objects.equals(this.create, modelAssetPos.create) &&
        Objects.equals(this.update, modelAssetPos.update) &&
        Objects.equals(this.sevClient, modelAssetPos.sevClient) &&
        Objects.equals(this.asset, modelAssetPos.asset) &&
        Objects.equals(this.year, modelAssetPos.year) &&
        Objects.equals(this.depreciationAmount, modelAssetPos.depreciationAmount) &&
        Objects.equals(this.residualValue, modelAssetPos.residualValue) &&
        Objects.equals(this.month, modelAssetPos.month) &&
        Objects.equals(this.enshrined, modelAssetPos.enshrined) &&
        Objects.equals(this.correction, modelAssetPos.correction);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, sevClient, asset, year, depreciationAmount, residualValue, month, enshrined, correction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelAssetPos {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    depreciationAmount: ").append(toIndentedString(depreciationAmount)).append("\n");
    sb.append("    residualValue: ").append(toIndentedString(residualValue)).append("\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    enshrined: ").append(toIndentedString(enshrined)).append("\n");
    sb.append("    correction: ").append(toIndentedString(correction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
