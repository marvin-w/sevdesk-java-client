/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelSevToken
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelSevToken {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("user")

  private Object user = null;

  @JsonProperty("token")

  private String token = null;

  @JsonProperty("expire")

  private OffsetDateTime expire = null;

  @JsonProperty("active")

  private Boolean active = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("ipAddress")

  private String ipAddress = null;

  @JsonProperty("userAgent")

  private String userAgent = null;
  /**
   * Type of the token
   */
  public enum TokenTypeEnum {
    LOGIN("LOGIN"),
    API("API"),
    SUPPORT("SUPPORT");

    private String value;

    TokenTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TokenTypeEnum fromValue(String text) {
      for (TokenTypeEnum b : TokenTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }
  @JsonProperty("tokenType")

  private TokenTypeEnum tokenType = null;

  @JsonProperty("confirmationToken")

  private String confirmationToken = null;
  public ModelSevToken create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the sevToken was created
  * @return create
  **/
  @Schema(description = "date the sevToken was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelSevToken update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the sevToken was last updated
  * @return update
  **/
  @Schema(description = "date the sevToken was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelSevToken user(Object user) {
    this.user = user;
    return this;
  }

  

  /**
  * SevUser to whom the sevToken belongs
  * @return user
  **/
  @Schema(description = "SevUser to whom the sevToken belongs")
  public Object getUser() {
    return user;
  }
  public void setUser(Object user) {
    this.user = user;
  }
  public ModelSevToken token(String token) {
    this.token = token;
    return this;
  }

  

  /**
  * token of the sevUser
  * @return token
  **/
  @Schema(description = "token of the sevUser")
  public String getToken() {
    return token;
  }
  public void setToken(String token) {
    this.token = token;
  }
  public ModelSevToken expire(OffsetDateTime expire) {
    this.expire = expire;
    return this;
  }

  

  /**
  * expiration date of the token
  * @return expire
  **/
  @Schema(description = "expiration date of the token")
  public OffsetDateTime getExpire() {
    return expire;
  }
  public void setExpire(OffsetDateTime expire) {
    this.expire = expire;
  }
  public ModelSevToken active(Boolean active) {
    this.active = active;
    return this;
  }

  

  /**
  * Defines if the token is active
  * @return active
  **/
  @Schema(description = "Defines if the token is active")
  public Boolean isActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }
  public ModelSevToken sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelSevToken ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  

  /**
  * Ip address of the user
  * @return ipAddress
  **/
  @Schema(description = "Ip address of the user")
  public String getIpAddress() {
    return ipAddress;
  }
  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }
  public ModelSevToken userAgent(String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  

  /**
  * Information about the users system
  * @return userAgent
  **/
  @Schema(description = "Information about the users system")
  public String getUserAgent() {
    return userAgent;
  }
  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }
  public ModelSevToken tokenType(TokenTypeEnum tokenType) {
    this.tokenType = tokenType;
    return this;
  }

  

  /**
  * Type of the token
  * @return tokenType
  **/
  @Schema(description = "Type of the token")
  public TokenTypeEnum getTokenType() {
    return tokenType;
  }
  public void setTokenType(TokenTypeEnum tokenType) {
    this.tokenType = tokenType;
  }
  public ModelSevToken confirmationToken(String confirmationToken) {
    this.confirmationToken = confirmationToken;
    return this;
  }

  

  /**
  * Confirmation token
  * @return confirmationToken
  **/
  @Schema(description = "Confirmation token")
  public String getConfirmationToken() {
    return confirmationToken;
  }
  public void setConfirmationToken(String confirmationToken) {
    this.confirmationToken = confirmationToken;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelSevToken modelSevToken = (ModelSevToken) o;
    return Objects.equals(this.create, modelSevToken.create) &&
        Objects.equals(this.update, modelSevToken.update) &&
        Objects.equals(this.user, modelSevToken.user) &&
        Objects.equals(this.token, modelSevToken.token) &&
        Objects.equals(this.expire, modelSevToken.expire) &&
        Objects.equals(this.active, modelSevToken.active) &&
        Objects.equals(this.sevClient, modelSevToken.sevClient) &&
        Objects.equals(this.ipAddress, modelSevToken.ipAddress) &&
        Objects.equals(this.userAgent, modelSevToken.userAgent) &&
        Objects.equals(this.tokenType, modelSevToken.tokenType) &&
        Objects.equals(this.confirmationToken, modelSevToken.confirmationToken);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, user, token, expire, active, sevClient, ipAddress, userAgent, tokenType, confirmationToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelSevToken {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    expire: ").append(toIndentedString(expire)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    confirmationToken: ").append(toIndentedString(confirmationToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
