/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.wichmann.sevdesk.model.ModelContact;
import de.wichmann.sevdesk.model.ModelContactAddress;
import de.wichmann.sevdesk.model.ModelSevUser;
import de.wichmann.sevdesk.model.ModelStaticCountry;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelLetter
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelLetter {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("letterNumber")

  private String letterNumber = null;

  @JsonProperty("contact")

  private ModelContact contact = null;

  @JsonProperty("letterDate")

  private OffsetDateTime letterDate = null;

  @JsonProperty("header")

  private String header = null;

  @JsonProperty("addressName")

  private String addressName = null;

  @JsonProperty("addressName2")

  private String addressName2 = null;

  @JsonProperty("addressStreet")

  private String addressStreet = null;

  @JsonProperty("addressZip")

  private String addressZip = null;

  @JsonProperty("addressCity")

  private String addressCity = null;

  @JsonProperty("addressCountry")

  private ModelStaticCountry addressCountry = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("status")

  private Integer status = null;

  @JsonProperty("contactPerson")

  private ModelSevUser contactPerson = null;

  @JsonProperty("addressParentName")

  private String addressParentName = null;

  @JsonProperty("addressContactRef")

  private ModelContactAddress addressContactRef = null;

  @JsonProperty("text")

  private String text = null;

  @JsonProperty("sendDate")

  private OffsetDateTime sendDate = null;

  @JsonProperty("addressParentName2")

  private String addressParentName2 = null;

  @JsonProperty("addressGender")

  private String addressGender = null;

  @JsonProperty("address")

  private String address = null;

  @JsonProperty("sendType")

  private String sendType = null;
  public ModelLetter create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * creation date of the letter
  * @return create
  **/
  @Schema(description = "creation date of the letter")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelLetter update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the letter was last updated
  * @return update
  **/
  @Schema(description = "date the letter was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelLetter letterNumber(String letterNumber) {
    this.letterNumber = letterNumber;
    return this;
  }

  

  /**
  * Get letterNumber
  * @return letterNumber
  **/
  @Schema(description = "")
  public String getLetterNumber() {
    return letterNumber;
  }
  public void setLetterNumber(String letterNumber) {
    this.letterNumber = letterNumber;
  }
  public ModelLetter contact(ModelContact contact) {
    this.contact = contact;
    return this;
  }

  

  /**
  * Get contact
  * @return contact
  **/
  @Schema(description = "")
  public ModelContact getContact() {
    return contact;
  }
  public void setContact(ModelContact contact) {
    this.contact = contact;
  }
  public ModelLetter letterDate(OffsetDateTime letterDate) {
    this.letterDate = letterDate;
    return this;
  }

  

  /**
  * Get letterDate
  * @return letterDate
  **/
  @Schema(description = "")
  public OffsetDateTime getLetterDate() {
    return letterDate;
  }
  public void setLetterDate(OffsetDateTime letterDate) {
    this.letterDate = letterDate;
  }
  public ModelLetter header(String header) {
    this.header = header;
    return this;
  }

  

  /**
  * Get header
  * @return header
  **/
  @Schema(description = "")
  public String getHeader() {
    return header;
  }
  public void setHeader(String header) {
    this.header = header;
  }
  public ModelLetter addressName(String addressName) {
    this.addressName = addressName;
    return this;
  }

  

  /**
  * Get addressName
  * @return addressName
  **/
  @Schema(description = "")
  public String getAddressName() {
    return addressName;
  }
  public void setAddressName(String addressName) {
    this.addressName = addressName;
  }
  public ModelLetter addressName2(String addressName2) {
    this.addressName2 = addressName2;
    return this;
  }

  

  /**
  * Get addressName2
  * @return addressName2
  **/
  @Schema(description = "")
  public String getAddressName2() {
    return addressName2;
  }
  public void setAddressName2(String addressName2) {
    this.addressName2 = addressName2;
  }
  public ModelLetter addressStreet(String addressStreet) {
    this.addressStreet = addressStreet;
    return this;
  }

  

  /**
  * Get addressStreet
  * @return addressStreet
  **/
  @Schema(description = "")
  public String getAddressStreet() {
    return addressStreet;
  }
  public void setAddressStreet(String addressStreet) {
    this.addressStreet = addressStreet;
  }
  public ModelLetter addressZip(String addressZip) {
    this.addressZip = addressZip;
    return this;
  }

  

  /**
  * Get addressZip
  * @return addressZip
  **/
  @Schema(description = "")
  public String getAddressZip() {
    return addressZip;
  }
  public void setAddressZip(String addressZip) {
    this.addressZip = addressZip;
  }
  public ModelLetter addressCity(String addressCity) {
    this.addressCity = addressCity;
    return this;
  }

  

  /**
  * Get addressCity
  * @return addressCity
  **/
  @Schema(description = "")
  public String getAddressCity() {
    return addressCity;
  }
  public void setAddressCity(String addressCity) {
    this.addressCity = addressCity;
  }
  public ModelLetter addressCountry(ModelStaticCountry addressCountry) {
    this.addressCountry = addressCountry;
    return this;
  }

  

  /**
  * Get addressCountry
  * @return addressCountry
  **/
  @Schema(description = "")
  public ModelStaticCountry getAddressCountry() {
    return addressCountry;
  }
  public void setAddressCountry(ModelStaticCountry addressCountry) {
    this.addressCountry = addressCountry;
  }
  public ModelLetter sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelLetter status(Integer status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }
  public void setStatus(Integer status) {
    this.status = status;
  }
  public ModelLetter contactPerson(ModelSevUser contactPerson) {
    this.contactPerson = contactPerson;
    return this;
  }

  

  /**
  * Get contactPerson
  * @return contactPerson
  **/
  @Schema(description = "")
  public ModelSevUser getContactPerson() {
    return contactPerson;
  }
  public void setContactPerson(ModelSevUser contactPerson) {
    this.contactPerson = contactPerson;
  }
  public ModelLetter addressParentName(String addressParentName) {
    this.addressParentName = addressParentName;
    return this;
  }

  

  /**
  * Get addressParentName
  * @return addressParentName
  **/
  @Schema(description = "")
  public String getAddressParentName() {
    return addressParentName;
  }
  public void setAddressParentName(String addressParentName) {
    this.addressParentName = addressParentName;
  }
  public ModelLetter addressContactRef(ModelContactAddress addressContactRef) {
    this.addressContactRef = addressContactRef;
    return this;
  }

  

  /**
  * Get addressContactRef
  * @return addressContactRef
  **/
  @Schema(description = "")
  public ModelContactAddress getAddressContactRef() {
    return addressContactRef;
  }
  public void setAddressContactRef(ModelContactAddress addressContactRef) {
    this.addressContactRef = addressContactRef;
  }
  public ModelLetter text(String text) {
    this.text = text;
    return this;
  }

  

  /**
  * text for the letter
  * @return text
  **/
  @Schema(description = "text for the letter")
  public String getText() {
    return text;
  }
  public void setText(String text) {
    this.text = text;
  }
  public ModelLetter sendDate(OffsetDateTime sendDate) {
    this.sendDate = sendDate;
    return this;
  }

  

  /**
  * Get sendDate
  * @return sendDate
  **/
  @Schema(description = "")
  public OffsetDateTime getSendDate() {
    return sendDate;
  }
  public void setSendDate(OffsetDateTime sendDate) {
    this.sendDate = sendDate;
  }
  public ModelLetter addressParentName2(String addressParentName2) {
    this.addressParentName2 = addressParentName2;
    return this;
  }

  

  /**
  * Get addressParentName2
  * @return addressParentName2
  **/
  @Schema(description = "")
  public String getAddressParentName2() {
    return addressParentName2;
  }
  public void setAddressParentName2(String addressParentName2) {
    this.addressParentName2 = addressParentName2;
  }
  public ModelLetter addressGender(String addressGender) {
    this.addressGender = addressGender;
    return this;
  }

  

  /**
  * Get addressGender
  * @return addressGender
  **/
  @Schema(description = "")
  public String getAddressGender() {
    return addressGender;
  }
  public void setAddressGender(String addressGender) {
    this.addressGender = addressGender;
  }
  public ModelLetter address(String address) {
    this.address = address;
    return this;
  }

  

  /**
  * Get address
  * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }
  public void setAddress(String address) {
    this.address = address;
  }
  public ModelLetter sendType(String sendType) {
    this.sendType = sendType;
    return this;
  }

  

  /**
  * Get sendType
  * @return sendType
  **/
  @Schema(description = "")
  public String getSendType() {
    return sendType;
  }
  public void setSendType(String sendType) {
    this.sendType = sendType;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelLetter modelLetter = (ModelLetter) o;
    return Objects.equals(this.create, modelLetter.create) &&
        Objects.equals(this.update, modelLetter.update) &&
        Objects.equals(this.letterNumber, modelLetter.letterNumber) &&
        Objects.equals(this.contact, modelLetter.contact) &&
        Objects.equals(this.letterDate, modelLetter.letterDate) &&
        Objects.equals(this.header, modelLetter.header) &&
        Objects.equals(this.addressName, modelLetter.addressName) &&
        Objects.equals(this.addressName2, modelLetter.addressName2) &&
        Objects.equals(this.addressStreet, modelLetter.addressStreet) &&
        Objects.equals(this.addressZip, modelLetter.addressZip) &&
        Objects.equals(this.addressCity, modelLetter.addressCity) &&
        Objects.equals(this.addressCountry, modelLetter.addressCountry) &&
        Objects.equals(this.sevClient, modelLetter.sevClient) &&
        Objects.equals(this.status, modelLetter.status) &&
        Objects.equals(this.contactPerson, modelLetter.contactPerson) &&
        Objects.equals(this.addressParentName, modelLetter.addressParentName) &&
        Objects.equals(this.addressContactRef, modelLetter.addressContactRef) &&
        Objects.equals(this.text, modelLetter.text) &&
        Objects.equals(this.sendDate, modelLetter.sendDate) &&
        Objects.equals(this.addressParentName2, modelLetter.addressParentName2) &&
        Objects.equals(this.addressGender, modelLetter.addressGender) &&
        Objects.equals(this.address, modelLetter.address) &&
        Objects.equals(this.sendType, modelLetter.sendType);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, letterNumber, contact, letterDate, header, addressName, addressName2, addressStreet, addressZip, addressCity, addressCountry, sevClient, status, contactPerson, addressParentName, addressContactRef, text, sendDate, addressParentName2, addressGender, address, sendType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelLetter {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    letterNumber: ").append(toIndentedString(letterNumber)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    letterDate: ").append(toIndentedString(letterDate)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    addressName: ").append(toIndentedString(addressName)).append("\n");
    sb.append("    addressName2: ").append(toIndentedString(addressName2)).append("\n");
    sb.append("    addressStreet: ").append(toIndentedString(addressStreet)).append("\n");
    sb.append("    addressZip: ").append(toIndentedString(addressZip)).append("\n");
    sb.append("    addressCity: ").append(toIndentedString(addressCity)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    addressParentName: ").append(toIndentedString(addressParentName)).append("\n");
    sb.append("    addressContactRef: ").append(toIndentedString(addressContactRef)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    sendDate: ").append(toIndentedString(sendDate)).append("\n");
    sb.append("    addressParentName2: ").append(toIndentedString(addressParentName2)).append("\n");
    sb.append("    addressGender: ").append(toIndentedString(addressGender)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    sendType: ").append(toIndentedString(sendType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
