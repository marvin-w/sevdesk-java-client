/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.wichmann.sevdesk.model.ModelAccountingChart;
import de.wichmann.sevdesk.model.ModelAccountingType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelAccountingType
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelAccountingType {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("parent")

  private ModelAccountingType parent = null;

  @JsonProperty("name")

  private String name = null;

  @JsonProperty("skr03")

  private Integer skr03 = null;

  @JsonProperty("skr03Deprecation")

  private Integer skr03Deprecation = null;

  @JsonProperty("accountingChart")

  private ModelAccountingChart accountingChart = null;

  @JsonProperty("skr04")

  private Integer skr04 = null;

  @JsonProperty("skr04Deprecation")

  private Integer skr04Deprecation = null;

  @JsonProperty("skrAt")

  private Integer skrAt = null;

  @JsonProperty("skrAtDeprecation")

  private Integer skrAtDeprecation = null;

  @JsonProperty("skrCh")

  private Integer skrCh = null;

  @JsonProperty("skrChDeprecation")

  private Integer skrChDeprecation = null;

  @JsonProperty("skrGr")

  private Integer skrGr = null;

  @JsonProperty("skrGrDeprecation")

  private Integer skrGrDeprecation = null;

  @JsonProperty("type")

  private String type = null;

  @JsonProperty("translationCode")

  private String translationCode = null;

  @JsonProperty("descriptionTranslationCode")

  private String descriptionTranslationCode = null;

  @JsonProperty("connotationTranslationCode")

  private String connotationTranslationCode = null;

  @JsonProperty("bookingType")

  private String bookingType = null;

  @JsonProperty("assetType")

  private String assetType = "N";

  @JsonProperty("status")

  private Integer status = null;
  public ModelAccountingType create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the accounting type was created
  * @return create
  **/
  @Schema(description = "date the accounting type was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelAccountingType update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the accounting type was last updated
  * @return update
  **/
  @Schema(description = "date the accounting type was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelAccountingType sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelAccountingType parent(ModelAccountingType parent) {
    this.parent = parent;
    return this;
  }

  

  /**
  * Get parent
  * @return parent
  **/
  @Schema(description = "")
  public ModelAccountingType getParent() {
    return parent;
  }
  public void setParent(ModelAccountingType parent) {
    this.parent = parent;
  }
  public ModelAccountingType name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ModelAccountingType skr03(Integer skr03) {
    this.skr03 = skr03;
    return this;
  }

  

  /**
  * Get skr03
  * @return skr03
  **/
  @Schema(description = "")
  public Integer getSkr03() {
    return skr03;
  }
  public void setSkr03(Integer skr03) {
    this.skr03 = skr03;
  }
  public ModelAccountingType skr03Deprecation(Integer skr03Deprecation) {
    this.skr03Deprecation = skr03Deprecation;
    return this;
  }

  

  /**
  * Get skr03Deprecation
  * @return skr03Deprecation
  **/
  @Schema(description = "")
  public Integer getSkr03Deprecation() {
    return skr03Deprecation;
  }
  public void setSkr03Deprecation(Integer skr03Deprecation) {
    this.skr03Deprecation = skr03Deprecation;
  }
  public ModelAccountingType accountingChart(ModelAccountingChart accountingChart) {
    this.accountingChart = accountingChart;
    return this;
  }

  

  /**
  * Get accountingChart
  * @return accountingChart
  **/
  @Schema(description = "")
  public ModelAccountingChart getAccountingChart() {
    return accountingChart;
  }
  public void setAccountingChart(ModelAccountingChart accountingChart) {
    this.accountingChart = accountingChart;
  }
  public ModelAccountingType skr04(Integer skr04) {
    this.skr04 = skr04;
    return this;
  }

  

  /**
  * Get skr04
  * @return skr04
  **/
  @Schema(description = "")
  public Integer getSkr04() {
    return skr04;
  }
  public void setSkr04(Integer skr04) {
    this.skr04 = skr04;
  }
  public ModelAccountingType skr04Deprecation(Integer skr04Deprecation) {
    this.skr04Deprecation = skr04Deprecation;
    return this;
  }

  

  /**
  * Get skr04Deprecation
  * @return skr04Deprecation
  **/
  @Schema(description = "")
  public Integer getSkr04Deprecation() {
    return skr04Deprecation;
  }
  public void setSkr04Deprecation(Integer skr04Deprecation) {
    this.skr04Deprecation = skr04Deprecation;
  }
  public ModelAccountingType skrAt(Integer skrAt) {
    this.skrAt = skrAt;
    return this;
  }

  

  /**
  * Get skrAt
  * @return skrAt
  **/
  @Schema(description = "")
  public Integer getSkrAt() {
    return skrAt;
  }
  public void setSkrAt(Integer skrAt) {
    this.skrAt = skrAt;
  }
  public ModelAccountingType skrAtDeprecation(Integer skrAtDeprecation) {
    this.skrAtDeprecation = skrAtDeprecation;
    return this;
  }

  

  /**
  * Get skrAtDeprecation
  * @return skrAtDeprecation
  **/
  @Schema(description = "")
  public Integer getSkrAtDeprecation() {
    return skrAtDeprecation;
  }
  public void setSkrAtDeprecation(Integer skrAtDeprecation) {
    this.skrAtDeprecation = skrAtDeprecation;
  }
  public ModelAccountingType skrCh(Integer skrCh) {
    this.skrCh = skrCh;
    return this;
  }

  

  /**
  * Get skrCh
  * @return skrCh
  **/
  @Schema(description = "")
  public Integer getSkrCh() {
    return skrCh;
  }
  public void setSkrCh(Integer skrCh) {
    this.skrCh = skrCh;
  }
  public ModelAccountingType skrChDeprecation(Integer skrChDeprecation) {
    this.skrChDeprecation = skrChDeprecation;
    return this;
  }

  

  /**
  * Get skrChDeprecation
  * @return skrChDeprecation
  **/
  @Schema(description = "")
  public Integer getSkrChDeprecation() {
    return skrChDeprecation;
  }
  public void setSkrChDeprecation(Integer skrChDeprecation) {
    this.skrChDeprecation = skrChDeprecation;
  }
  public ModelAccountingType skrGr(Integer skrGr) {
    this.skrGr = skrGr;
    return this;
  }

  

  /**
  * Get skrGr
  * @return skrGr
  **/
  @Schema(description = "")
  public Integer getSkrGr() {
    return skrGr;
  }
  public void setSkrGr(Integer skrGr) {
    this.skrGr = skrGr;
  }
  public ModelAccountingType skrGrDeprecation(Integer skrGrDeprecation) {
    this.skrGrDeprecation = skrGrDeprecation;
    return this;
  }

  

  /**
  * Get skrGrDeprecation
  * @return skrGrDeprecation
  **/
  @Schema(description = "")
  public Integer getSkrGrDeprecation() {
    return skrGrDeprecation;
  }
  public void setSkrGrDeprecation(Integer skrGrDeprecation) {
    this.skrGrDeprecation = skrGrDeprecation;
  }
  public ModelAccountingType type(String type) {
    this.type = type;
    return this;
  }

  

  /**
  * Get type
  * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }
  public ModelAccountingType translationCode(String translationCode) {
    this.translationCode = translationCode;
    return this;
  }

  

  /**
  * Get translationCode
  * @return translationCode
  **/
  @Schema(description = "")
  public String getTranslationCode() {
    return translationCode;
  }
  public void setTranslationCode(String translationCode) {
    this.translationCode = translationCode;
  }
  public ModelAccountingType descriptionTranslationCode(String descriptionTranslationCode) {
    this.descriptionTranslationCode = descriptionTranslationCode;
    return this;
  }

  

  /**
  * Get descriptionTranslationCode
  * @return descriptionTranslationCode
  **/
  @Schema(description = "")
  public String getDescriptionTranslationCode() {
    return descriptionTranslationCode;
  }
  public void setDescriptionTranslationCode(String descriptionTranslationCode) {
    this.descriptionTranslationCode = descriptionTranslationCode;
  }
  public ModelAccountingType connotationTranslationCode(String connotationTranslationCode) {
    this.connotationTranslationCode = connotationTranslationCode;
    return this;
  }

  

  /**
  * Get connotationTranslationCode
  * @return connotationTranslationCode
  **/
  @Schema(description = "")
  public String getConnotationTranslationCode() {
    return connotationTranslationCode;
  }
  public void setConnotationTranslationCode(String connotationTranslationCode) {
    this.connotationTranslationCode = connotationTranslationCode;
  }
  public ModelAccountingType bookingType(String bookingType) {
    this.bookingType = bookingType;
    return this;
  }

  

  /**
  * Get bookingType
  * @return bookingType
  **/
  @Schema(description = "")
  public String getBookingType() {
    return bookingType;
  }
  public void setBookingType(String bookingType) {
    this.bookingType = bookingType;
  }
  public ModelAccountingType assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

  

  /**
  * Get assetType
  * @return assetType
  **/
  @Schema(description = "")
  public String getAssetType() {
    return assetType;
  }
  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }
  public ModelAccountingType status(Integer status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }
  public void setStatus(Integer status) {
    this.status = status;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelAccountingType modelAccountingType = (ModelAccountingType) o;
    return Objects.equals(this.create, modelAccountingType.create) &&
        Objects.equals(this.update, modelAccountingType.update) &&
        Objects.equals(this.sevClient, modelAccountingType.sevClient) &&
        Objects.equals(this.parent, modelAccountingType.parent) &&
        Objects.equals(this.name, modelAccountingType.name) &&
        Objects.equals(this.skr03, modelAccountingType.skr03) &&
        Objects.equals(this.skr03Deprecation, modelAccountingType.skr03Deprecation) &&
        Objects.equals(this.accountingChart, modelAccountingType.accountingChart) &&
        Objects.equals(this.skr04, modelAccountingType.skr04) &&
        Objects.equals(this.skr04Deprecation, modelAccountingType.skr04Deprecation) &&
        Objects.equals(this.skrAt, modelAccountingType.skrAt) &&
        Objects.equals(this.skrAtDeprecation, modelAccountingType.skrAtDeprecation) &&
        Objects.equals(this.skrCh, modelAccountingType.skrCh) &&
        Objects.equals(this.skrChDeprecation, modelAccountingType.skrChDeprecation) &&
        Objects.equals(this.skrGr, modelAccountingType.skrGr) &&
        Objects.equals(this.skrGrDeprecation, modelAccountingType.skrGrDeprecation) &&
        Objects.equals(this.type, modelAccountingType.type) &&
        Objects.equals(this.translationCode, modelAccountingType.translationCode) &&
        Objects.equals(this.descriptionTranslationCode, modelAccountingType.descriptionTranslationCode) &&
        Objects.equals(this.connotationTranslationCode, modelAccountingType.connotationTranslationCode) &&
        Objects.equals(this.bookingType, modelAccountingType.bookingType) &&
        Objects.equals(this.assetType, modelAccountingType.assetType) &&
        Objects.equals(this.status, modelAccountingType.status);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, sevClient, parent, name, skr03, skr03Deprecation, accountingChart, skr04, skr04Deprecation, skrAt, skrAtDeprecation, skrCh, skrChDeprecation, skrGr, skrGrDeprecation, type, translationCode, descriptionTranslationCode, connotationTranslationCode, bookingType, assetType, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelAccountingType {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    skr03: ").append(toIndentedString(skr03)).append("\n");
    sb.append("    skr03Deprecation: ").append(toIndentedString(skr03Deprecation)).append("\n");
    sb.append("    accountingChart: ").append(toIndentedString(accountingChart)).append("\n");
    sb.append("    skr04: ").append(toIndentedString(skr04)).append("\n");
    sb.append("    skr04Deprecation: ").append(toIndentedString(skr04Deprecation)).append("\n");
    sb.append("    skrAt: ").append(toIndentedString(skrAt)).append("\n");
    sb.append("    skrAtDeprecation: ").append(toIndentedString(skrAtDeprecation)).append("\n");
    sb.append("    skrCh: ").append(toIndentedString(skrCh)).append("\n");
    sb.append("    skrChDeprecation: ").append(toIndentedString(skrChDeprecation)).append("\n");
    sb.append("    skrGr: ").append(toIndentedString(skrGr)).append("\n");
    sb.append("    skrGrDeprecation: ").append(toIndentedString(skrGrDeprecation)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    translationCode: ").append(toIndentedString(translationCode)).append("\n");
    sb.append("    descriptionTranslationCode: ").append(toIndentedString(descriptionTranslationCode)).append("\n");
    sb.append("    connotationTranslationCode: ").append(toIndentedString(connotationTranslationCode)).append("\n");
    sb.append("    bookingType: ").append(toIndentedString(bookingType)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
