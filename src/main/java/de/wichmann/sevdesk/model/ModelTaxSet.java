/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelTaxSet
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelTaxSet {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("text")

  private String text = null;

  @JsonProperty("taxRate")

  private Float taxRate = null;

  @JsonProperty("code")

  private Float code = null;

  @JsonProperty("displayText")

  private String displayText = null;

  @JsonProperty("vatReportFieldNet")

  private String vatReportFieldNet = null;

  @JsonProperty("vatReportFieldTax")

  private String vatReportFieldTax = null;

  @JsonProperty("accountingExportVatField")

  private String accountingExportVatField = null;

  @JsonProperty("showInvoice")

  private Boolean showInvoice = null;

  @JsonProperty("showDebitVoucher")

  private Boolean showDebitVoucher = null;

  @JsonProperty("showCreditVoucher")

  private Boolean showCreditVoucher = null;

  @JsonProperty("onlyForVatDec")

  private Boolean onlyForVatDec = null;
  public ModelTaxSet create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the tax set was created
  * @return create
  **/
  @Schema(description = "date the tax set was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelTaxSet update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the tax set was last updated
  * @return update
  **/
  @Schema(description = "date the tax set was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelTaxSet sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelTaxSet text(String text) {
    this.text = text;
    return this;
  }

  

  /**
  * Get text
  * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }
  public void setText(String text) {
    this.text = text;
  }
  public ModelTaxSet taxRate(Float taxRate) {
    this.taxRate = taxRate;
    return this;
  }

  

  /**
  * Get taxRate
  * @return taxRate
  **/
  @Schema(description = "")
  public Float getTaxRate() {
    return taxRate;
  }
  public void setTaxRate(Float taxRate) {
    this.taxRate = taxRate;
  }
  public ModelTaxSet code(Float code) {
    this.code = code;
    return this;
  }

  

  /**
  * Get code
  * @return code
  **/
  @Schema(description = "")
  public Float getCode() {
    return code;
  }
  public void setCode(Float code) {
    this.code = code;
  }
  public ModelTaxSet displayText(String displayText) {
    this.displayText = displayText;
    return this;
  }

  

  /**
  * Get displayText
  * @return displayText
  **/
  @Schema(description = "")
  public String getDisplayText() {
    return displayText;
  }
  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }
  public ModelTaxSet vatReportFieldNet(String vatReportFieldNet) {
    this.vatReportFieldNet = vatReportFieldNet;
    return this;
  }

  

  /**
  * Get vatReportFieldNet
  * @return vatReportFieldNet
  **/
  @Schema(description = "")
  public String getVatReportFieldNet() {
    return vatReportFieldNet;
  }
  public void setVatReportFieldNet(String vatReportFieldNet) {
    this.vatReportFieldNet = vatReportFieldNet;
  }
  public ModelTaxSet vatReportFieldTax(String vatReportFieldTax) {
    this.vatReportFieldTax = vatReportFieldTax;
    return this;
  }

  

  /**
  * Get vatReportFieldTax
  * @return vatReportFieldTax
  **/
  @Schema(description = "")
  public String getVatReportFieldTax() {
    return vatReportFieldTax;
  }
  public void setVatReportFieldTax(String vatReportFieldTax) {
    this.vatReportFieldTax = vatReportFieldTax;
  }
  public ModelTaxSet accountingExportVatField(String accountingExportVatField) {
    this.accountingExportVatField = accountingExportVatField;
    return this;
  }

  

  /**
  * Get accountingExportVatField
  * @return accountingExportVatField
  **/
  @Schema(description = "")
  public String getAccountingExportVatField() {
    return accountingExportVatField;
  }
  public void setAccountingExportVatField(String accountingExportVatField) {
    this.accountingExportVatField = accountingExportVatField;
  }
  public ModelTaxSet showInvoice(Boolean showInvoice) {
    this.showInvoice = showInvoice;
    return this;
  }

  

  /**
  * Get showInvoice
  * @return showInvoice
  **/
  @Schema(description = "")
  public Boolean isShowInvoice() {
    return showInvoice;
  }
  public void setShowInvoice(Boolean showInvoice) {
    this.showInvoice = showInvoice;
  }
  public ModelTaxSet showDebitVoucher(Boolean showDebitVoucher) {
    this.showDebitVoucher = showDebitVoucher;
    return this;
  }

  

  /**
  * Get showDebitVoucher
  * @return showDebitVoucher
  **/
  @Schema(description = "")
  public Boolean isShowDebitVoucher() {
    return showDebitVoucher;
  }
  public void setShowDebitVoucher(Boolean showDebitVoucher) {
    this.showDebitVoucher = showDebitVoucher;
  }
  public ModelTaxSet showCreditVoucher(Boolean showCreditVoucher) {
    this.showCreditVoucher = showCreditVoucher;
    return this;
  }

  

  /**
  * Get showCreditVoucher
  * @return showCreditVoucher
  **/
  @Schema(description = "")
  public Boolean isShowCreditVoucher() {
    return showCreditVoucher;
  }
  public void setShowCreditVoucher(Boolean showCreditVoucher) {
    this.showCreditVoucher = showCreditVoucher;
  }
  public ModelTaxSet onlyForVatDec(Boolean onlyForVatDec) {
    this.onlyForVatDec = onlyForVatDec;
    return this;
  }

  

  /**
  * Get onlyForVatDec
  * @return onlyForVatDec
  **/
  @Schema(description = "")
  public Boolean isOnlyForVatDec() {
    return onlyForVatDec;
  }
  public void setOnlyForVatDec(Boolean onlyForVatDec) {
    this.onlyForVatDec = onlyForVatDec;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelTaxSet modelTaxSet = (ModelTaxSet) o;
    return Objects.equals(this.create, modelTaxSet.create) &&
        Objects.equals(this.update, modelTaxSet.update) &&
        Objects.equals(this.sevClient, modelTaxSet.sevClient) &&
        Objects.equals(this.text, modelTaxSet.text) &&
        Objects.equals(this.taxRate, modelTaxSet.taxRate) &&
        Objects.equals(this.code, modelTaxSet.code) &&
        Objects.equals(this.displayText, modelTaxSet.displayText) &&
        Objects.equals(this.vatReportFieldNet, modelTaxSet.vatReportFieldNet) &&
        Objects.equals(this.vatReportFieldTax, modelTaxSet.vatReportFieldTax) &&
        Objects.equals(this.accountingExportVatField, modelTaxSet.accountingExportVatField) &&
        Objects.equals(this.showInvoice, modelTaxSet.showInvoice) &&
        Objects.equals(this.showDebitVoucher, modelTaxSet.showDebitVoucher) &&
        Objects.equals(this.showCreditVoucher, modelTaxSet.showCreditVoucher) &&
        Objects.equals(this.onlyForVatDec, modelTaxSet.onlyForVatDec);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, sevClient, text, taxRate, code, displayText, vatReportFieldNet, vatReportFieldTax, accountingExportVatField, showInvoice, showDebitVoucher, showCreditVoucher, onlyForVatDec);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelTaxSet {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    vatReportFieldNet: ").append(toIndentedString(vatReportFieldNet)).append("\n");
    sb.append("    vatReportFieldTax: ").append(toIndentedString(vatReportFieldTax)).append("\n");
    sb.append("    accountingExportVatField: ").append(toIndentedString(accountingExportVatField)).append("\n");
    sb.append("    showInvoice: ").append(toIndentedString(showInvoice)).append("\n");
    sb.append("    showDebitVoucher: ").append(toIndentedString(showDebitVoucher)).append("\n");
    sb.append("    showCreditVoucher: ").append(toIndentedString(showCreditVoucher)).append("\n");
    sb.append("    onlyForVatDec: ").append(toIndentedString(onlyForVatDec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
