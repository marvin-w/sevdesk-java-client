/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelDiscounts
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelDiscounts {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("object")

  private Object object = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("discount")

  private Boolean discount = null;

  @JsonProperty("text")

  private String text = null;

  @JsonProperty("percentage")

  private Boolean percentage = null;

  @JsonProperty("value")

  private Float value = null;
  public ModelDiscounts create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the discount was created
  * @return create
  **/
  @Schema(description = "date the discount was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelDiscounts update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the discount was last updated
  * @return update
  **/
  @Schema(description = "date the discount was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelDiscounts object(Object object) {
    this.object = object;
    return this;
  }

  

  /**
  * object to which the discount belongs
  * @return object
  **/
  @Schema(description = "object to which the discount belongs")
  public Object getObject() {
    return object;
  }
  public void setObject(Object object) {
    this.object = object;
  }
  public ModelDiscounts sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelDiscounts discount(Boolean discount) {
    this.discount = discount;
    return this;
  }

  

  /**
  * specifies if a discount is enabled
  * @return discount
  **/
  @Schema(description = "specifies if a discount is enabled")
  public Boolean isDiscount() {
    return discount;
  }
  public void setDiscount(Boolean discount) {
    this.discount = discount;
  }
  public ModelDiscounts text(String text) {
    this.text = text;
    return this;
  }

  

  /**
  * description of the discount
  * @return text
  **/
  @Schema(description = "description of the discount")
  public String getText() {
    return text;
  }
  public void setText(String text) {
    this.text = text;
  }
  public ModelDiscounts percentage(Boolean percentage) {
    this.percentage = percentage;
    return this;
  }

  

  /**
  * specifies if discount is of type percentage, otherwise its a value
  * @return percentage
  **/
  @Schema(description = "specifies if discount is of type percentage, otherwise its a value")
  public Boolean isPercentage() {
    return percentage;
  }
  public void setPercentage(Boolean percentage) {
    this.percentage = percentage;
  }
  public ModelDiscounts value(Float value) {
    this.value = value;
    return this;
  }

  

  /**
  * Get value
  * @return value
  **/
  @Schema(description = "")
  public Float getValue() {
    return value;
  }
  public void setValue(Float value) {
    this.value = value;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelDiscounts modelDiscounts = (ModelDiscounts) o;
    return Objects.equals(this.create, modelDiscounts.create) &&
        Objects.equals(this.update, modelDiscounts.update) &&
        Objects.equals(this.object, modelDiscounts.object) &&
        Objects.equals(this.sevClient, modelDiscounts.sevClient) &&
        Objects.equals(this.discount, modelDiscounts.discount) &&
        Objects.equals(this.text, modelDiscounts.text) &&
        Objects.equals(this.percentage, modelDiscounts.percentage) &&
        Objects.equals(this.value, modelDiscounts.value);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, object, sevClient, discount, text, percentage, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelDiscounts {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
