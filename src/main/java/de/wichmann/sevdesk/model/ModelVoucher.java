/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.wichmann.sevdesk.model.ModelContact;
import de.wichmann.sevdesk.model.ModelCostCentre;
import de.wichmann.sevdesk.model.ModelDocument;
import de.wichmann.sevdesk.model.ModelSevUser;
import de.wichmann.sevdesk.model.ModelTaxSet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelVoucher
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelVoucher {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("createUser")

  private ModelSevUser createUser = null;

  @JsonProperty("voucherDate")

  private OffsetDateTime voucherDate = null;

  @JsonProperty("supplier")

  private ModelContact supplier = null;

  @JsonProperty("supplierName")

  private String supplierName = null;

  @JsonProperty("description")

  private String description = null;

  @JsonProperty("document")

  private ModelDocument document = null;

  @JsonProperty("resultDisdar")

  private String resultDisdar = null;

  @JsonProperty("documentPreview")

  private ModelDocument documentPreview = null;

  @JsonProperty("payDate")

  private OffsetDateTime payDate = null;

  @JsonProperty("status")

  private Integer status = null;

  @JsonProperty("object")

  private Object object = null;

  @JsonProperty("sumNet")

  private Float sumNet = 0.0f;

  @JsonProperty("sumTax")

  private Float sumTax = 0.0f;

  @JsonProperty("sumGross")

  private Float sumGross = 0.0f;

  @JsonProperty("sumNetAccounting")

  private Float sumNetAccounting = 0.0f;

  @JsonProperty("sumTaxAccounting")

  private Float sumTaxAccounting = 0.0f;

  @JsonProperty("sumGrossAccounting")

  private Float sumGrossAccounting = 0.0f;

  @JsonProperty("taxType")

  private String taxType = null;

  @JsonProperty("creditDebit")

  private String creditDebit = null;

  @JsonProperty("hidden")

  private Boolean hidden = null;

  @JsonProperty("costCentre")

  private ModelCostCentre costCentre = null;

  @JsonProperty("origin")

  private Object origin = null;

  @JsonProperty("voucherType")

  private String voucherType = null;

  @JsonProperty("recurringIntervall")

  private Integer recurringIntervall = null;

  @JsonProperty("recurringStartDate")

  private OffsetDateTime recurringStartDate = null;

  @JsonProperty("recurringNextVoucher")

  private OffsetDateTime recurringNextVoucher = null;

  @JsonProperty("recurringLastVoucher")

  private OffsetDateTime recurringLastVoucher = null;

  @JsonProperty("recurringEndDate")

  private OffsetDateTime recurringEndDate = null;

  @JsonProperty("enshrined")

  private Boolean enshrined = null;

  @JsonProperty("inSource")

  private String inSource = null;

  @JsonProperty("taxSet")

  private ModelTaxSet taxSet = null;

  @JsonProperty("iban")

  private String iban = null;

  @JsonProperty("accountingSpecialCase")

  private String accountingSpecialCase = null;

  @JsonProperty("paymentDeadline")

  private OffsetDateTime paymentDeadline = null;

  @JsonProperty("tip")

  private Float tip = 0.0f;
  public ModelVoucher create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the voucher was created
  * @return create
  **/
  @Schema(description = "date the voucher was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelVoucher update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the voucher was last updated
  * @return update
  **/
  @Schema(description = "date the voucher was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelVoucher sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelVoucher createUser(ModelSevUser createUser) {
    this.createUser = createUser;
    return this;
  }

  

  /**
  * Get createUser
  * @return createUser
  **/
  @Schema(description = "")
  public ModelSevUser getCreateUser() {
    return createUser;
  }
  public void setCreateUser(ModelSevUser createUser) {
    this.createUser = createUser;
  }
  public ModelVoucher voucherDate(OffsetDateTime voucherDate) {
    this.voucherDate = voucherDate;
    return this;
  }

  

  /**
  * Get voucherDate
  * @return voucherDate
  **/
  @Schema(description = "")
  public OffsetDateTime getVoucherDate() {
    return voucherDate;
  }
  public void setVoucherDate(OffsetDateTime voucherDate) {
    this.voucherDate = voucherDate;
  }
  public ModelVoucher supplier(ModelContact supplier) {
    this.supplier = supplier;
    return this;
  }

  

  /**
  * Get supplier
  * @return supplier
  **/
  @Schema(description = "")
  public ModelContact getSupplier() {
    return supplier;
  }
  public void setSupplier(ModelContact supplier) {
    this.supplier = supplier;
  }
  public ModelVoucher supplierName(String supplierName) {
    this.supplierName = supplierName;
    return this;
  }

  

  /**
  * Get supplierName
  * @return supplierName
  **/
  @Schema(description = "")
  public String getSupplierName() {
    return supplierName;
  }
  public void setSupplierName(String supplierName) {
    this.supplierName = supplierName;
  }
  public ModelVoucher description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public ModelVoucher document(ModelDocument document) {
    this.document = document;
    return this;
  }

  

  /**
  * Get document
  * @return document
  **/
  @Schema(description = "")
  public ModelDocument getDocument() {
    return document;
  }
  public void setDocument(ModelDocument document) {
    this.document = document;
  }
  public ModelVoucher resultDisdar(String resultDisdar) {
    this.resultDisdar = resultDisdar;
    return this;
  }

  

  /**
  * Get resultDisdar
  * @return resultDisdar
  **/
  @Schema(description = "")
  public String getResultDisdar() {
    return resultDisdar;
  }
  public void setResultDisdar(String resultDisdar) {
    this.resultDisdar = resultDisdar;
  }
  public ModelVoucher documentPreview(ModelDocument documentPreview) {
    this.documentPreview = documentPreview;
    return this;
  }

  

  /**
  * Get documentPreview
  * @return documentPreview
  **/
  @Schema(description = "")
  public ModelDocument getDocumentPreview() {
    return documentPreview;
  }
  public void setDocumentPreview(ModelDocument documentPreview) {
    this.documentPreview = documentPreview;
  }
  public ModelVoucher payDate(OffsetDateTime payDate) {
    this.payDate = payDate;
    return this;
  }

  

  /**
  * Get payDate
  * @return payDate
  **/
  @Schema(description = "")
  public OffsetDateTime getPayDate() {
    return payDate;
  }
  public void setPayDate(OffsetDateTime payDate) {
    this.payDate = payDate;
  }
  public ModelVoucher status(Integer status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }
  public void setStatus(Integer status) {
    this.status = status;
  }
  public ModelVoucher object(Object object) {
    this.object = object;
    return this;
  }

  

  /**
  * Get object
  * @return object
  **/
  @Schema(description = "")
  public Object getObject() {
    return object;
  }
  public void setObject(Object object) {
    this.object = object;
  }
  public ModelVoucher sumNet(Float sumNet) {
    this.sumNet = sumNet;
    return this;
  }

  

  /**
  * Get sumNet
  * @return sumNet
  **/
  @Schema(description = "")
  public Float getSumNet() {
    return sumNet;
  }
  public void setSumNet(Float sumNet) {
    this.sumNet = sumNet;
  }
  public ModelVoucher sumTax(Float sumTax) {
    this.sumTax = sumTax;
    return this;
  }

  

  /**
  * Get sumTax
  * @return sumTax
  **/
  @Schema(description = "")
  public Float getSumTax() {
    return sumTax;
  }
  public void setSumTax(Float sumTax) {
    this.sumTax = sumTax;
  }
  public ModelVoucher sumGross(Float sumGross) {
    this.sumGross = sumGross;
    return this;
  }

  

  /**
  * Get sumGross
  * @return sumGross
  **/
  @Schema(description = "")
  public Float getSumGross() {
    return sumGross;
  }
  public void setSumGross(Float sumGross) {
    this.sumGross = sumGross;
  }
  public ModelVoucher sumNetAccounting(Float sumNetAccounting) {
    this.sumNetAccounting = sumNetAccounting;
    return this;
  }

  

  /**
  * Get sumNetAccounting
  * @return sumNetAccounting
  **/
  @Schema(description = "")
  public Float getSumNetAccounting() {
    return sumNetAccounting;
  }
  public void setSumNetAccounting(Float sumNetAccounting) {
    this.sumNetAccounting = sumNetAccounting;
  }
  public ModelVoucher sumTaxAccounting(Float sumTaxAccounting) {
    this.sumTaxAccounting = sumTaxAccounting;
    return this;
  }

  

  /**
  * Get sumTaxAccounting
  * @return sumTaxAccounting
  **/
  @Schema(description = "")
  public Float getSumTaxAccounting() {
    return sumTaxAccounting;
  }
  public void setSumTaxAccounting(Float sumTaxAccounting) {
    this.sumTaxAccounting = sumTaxAccounting;
  }
  public ModelVoucher sumGrossAccounting(Float sumGrossAccounting) {
    this.sumGrossAccounting = sumGrossAccounting;
    return this;
  }

  

  /**
  * Get sumGrossAccounting
  * @return sumGrossAccounting
  **/
  @Schema(description = "")
  public Float getSumGrossAccounting() {
    return sumGrossAccounting;
  }
  public void setSumGrossAccounting(Float sumGrossAccounting) {
    this.sumGrossAccounting = sumGrossAccounting;
  }
  public ModelVoucher taxType(String taxType) {
    this.taxType = taxType;
    return this;
  }

  

  /**
  * Get taxType
  * @return taxType
  **/
  @Schema(description = "")
  public String getTaxType() {
    return taxType;
  }
  public void setTaxType(String taxType) {
    this.taxType = taxType;
  }
  public ModelVoucher creditDebit(String creditDebit) {
    this.creditDebit = creditDebit;
    return this;
  }

  

  /**
  * Get creditDebit
  * @return creditDebit
  **/
  @Schema(description = "")
  public String getCreditDebit() {
    return creditDebit;
  }
  public void setCreditDebit(String creditDebit) {
    this.creditDebit = creditDebit;
  }
  public ModelVoucher hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

  

  /**
  * Get hidden
  * @return hidden
  **/
  @Schema(description = "")
  public Boolean isHidden() {
    return hidden;
  }
  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }
  public ModelVoucher costCentre(ModelCostCentre costCentre) {
    this.costCentre = costCentre;
    return this;
  }

  

  /**
  * Get costCentre
  * @return costCentre
  **/
  @Schema(description = "")
  public ModelCostCentre getCostCentre() {
    return costCentre;
  }
  public void setCostCentre(ModelCostCentre costCentre) {
    this.costCentre = costCentre;
  }
  public ModelVoucher origin(Object origin) {
    this.origin = origin;
    return this;
  }

  

  /**
  * Get origin
  * @return origin
  **/
  @Schema(description = "")
  public Object getOrigin() {
    return origin;
  }
  public void setOrigin(Object origin) {
    this.origin = origin;
  }
  public ModelVoucher voucherType(String voucherType) {
    this.voucherType = voucherType;
    return this;
  }

  

  /**
  * Get voucherType
  * @return voucherType
  **/
  @Schema(description = "")
  public String getVoucherType() {
    return voucherType;
  }
  public void setVoucherType(String voucherType) {
    this.voucherType = voucherType;
  }
  public ModelVoucher recurringIntervall(Integer recurringIntervall) {
    this.recurringIntervall = recurringIntervall;
    return this;
  }

  

  /**
  * Get recurringIntervall
  * @return recurringIntervall
  **/
  @Schema(description = "")
  public Integer getRecurringIntervall() {
    return recurringIntervall;
  }
  public void setRecurringIntervall(Integer recurringIntervall) {
    this.recurringIntervall = recurringIntervall;
  }
  public ModelVoucher recurringStartDate(OffsetDateTime recurringStartDate) {
    this.recurringStartDate = recurringStartDate;
    return this;
  }

  

  /**
  * Get recurringStartDate
  * @return recurringStartDate
  **/
  @Schema(description = "")
  public OffsetDateTime getRecurringStartDate() {
    return recurringStartDate;
  }
  public void setRecurringStartDate(OffsetDateTime recurringStartDate) {
    this.recurringStartDate = recurringStartDate;
  }
  public ModelVoucher recurringNextVoucher(OffsetDateTime recurringNextVoucher) {
    this.recurringNextVoucher = recurringNextVoucher;
    return this;
  }

  

  /**
  * Get recurringNextVoucher
  * @return recurringNextVoucher
  **/
  @Schema(description = "")
  public OffsetDateTime getRecurringNextVoucher() {
    return recurringNextVoucher;
  }
  public void setRecurringNextVoucher(OffsetDateTime recurringNextVoucher) {
    this.recurringNextVoucher = recurringNextVoucher;
  }
  public ModelVoucher recurringLastVoucher(OffsetDateTime recurringLastVoucher) {
    this.recurringLastVoucher = recurringLastVoucher;
    return this;
  }

  

  /**
  * Get recurringLastVoucher
  * @return recurringLastVoucher
  **/
  @Schema(description = "")
  public OffsetDateTime getRecurringLastVoucher() {
    return recurringLastVoucher;
  }
  public void setRecurringLastVoucher(OffsetDateTime recurringLastVoucher) {
    this.recurringLastVoucher = recurringLastVoucher;
  }
  public ModelVoucher recurringEndDate(OffsetDateTime recurringEndDate) {
    this.recurringEndDate = recurringEndDate;
    return this;
  }

  

  /**
  * Get recurringEndDate
  * @return recurringEndDate
  **/
  @Schema(description = "")
  public OffsetDateTime getRecurringEndDate() {
    return recurringEndDate;
  }
  public void setRecurringEndDate(OffsetDateTime recurringEndDate) {
    this.recurringEndDate = recurringEndDate;
  }
  public ModelVoucher enshrined(Boolean enshrined) {
    this.enshrined = enshrined;
    return this;
  }

  

  /**
  * Get enshrined
  * @return enshrined
  **/
  @Schema(description = "")
  public Boolean isEnshrined() {
    return enshrined;
  }
  public void setEnshrined(Boolean enshrined) {
    this.enshrined = enshrined;
  }
  public ModelVoucher inSource(String inSource) {
    this.inSource = inSource;
    return this;
  }

  

  /**
  * Get inSource
  * @return inSource
  **/
  @Schema(description = "")
  public String getInSource() {
    return inSource;
  }
  public void setInSource(String inSource) {
    this.inSource = inSource;
  }
  public ModelVoucher taxSet(ModelTaxSet taxSet) {
    this.taxSet = taxSet;
    return this;
  }

  

  /**
  * Get taxSet
  * @return taxSet
  **/
  @Schema(description = "")
  public ModelTaxSet getTaxSet() {
    return taxSet;
  }
  public void setTaxSet(ModelTaxSet taxSet) {
    this.taxSet = taxSet;
  }
  public ModelVoucher iban(String iban) {
    this.iban = iban;
    return this;
  }

  

  /**
  * Get iban
  * @return iban
  **/
  @Schema(description = "")
  public String getIban() {
    return iban;
  }
  public void setIban(String iban) {
    this.iban = iban;
  }
  public ModelVoucher accountingSpecialCase(String accountingSpecialCase) {
    this.accountingSpecialCase = accountingSpecialCase;
    return this;
  }

  

  /**
  * Get accountingSpecialCase
  * @return accountingSpecialCase
  **/
  @Schema(description = "")
  public String getAccountingSpecialCase() {
    return accountingSpecialCase;
  }
  public void setAccountingSpecialCase(String accountingSpecialCase) {
    this.accountingSpecialCase = accountingSpecialCase;
  }
  public ModelVoucher paymentDeadline(OffsetDateTime paymentDeadline) {
    this.paymentDeadline = paymentDeadline;
    return this;
  }

  

  /**
  * Get paymentDeadline
  * @return paymentDeadline
  **/
  @Schema(description = "")
  public OffsetDateTime getPaymentDeadline() {
    return paymentDeadline;
  }
  public void setPaymentDeadline(OffsetDateTime paymentDeadline) {
    this.paymentDeadline = paymentDeadline;
  }
  public ModelVoucher tip(Float tip) {
    this.tip = tip;
    return this;
  }

  

  /**
  * Get tip
  * @return tip
  **/
  @Schema(description = "")
  public Float getTip() {
    return tip;
  }
  public void setTip(Float tip) {
    this.tip = tip;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelVoucher modelVoucher = (ModelVoucher) o;
    return Objects.equals(this.create, modelVoucher.create) &&
        Objects.equals(this.update, modelVoucher.update) &&
        Objects.equals(this.sevClient, modelVoucher.sevClient) &&
        Objects.equals(this.createUser, modelVoucher.createUser) &&
        Objects.equals(this.voucherDate, modelVoucher.voucherDate) &&
        Objects.equals(this.supplier, modelVoucher.supplier) &&
        Objects.equals(this.supplierName, modelVoucher.supplierName) &&
        Objects.equals(this.description, modelVoucher.description) &&
        Objects.equals(this.document, modelVoucher.document) &&
        Objects.equals(this.resultDisdar, modelVoucher.resultDisdar) &&
        Objects.equals(this.documentPreview, modelVoucher.documentPreview) &&
        Objects.equals(this.payDate, modelVoucher.payDate) &&
        Objects.equals(this.status, modelVoucher.status) &&
        Objects.equals(this.object, modelVoucher.object) &&
        Objects.equals(this.sumNet, modelVoucher.sumNet) &&
        Objects.equals(this.sumTax, modelVoucher.sumTax) &&
        Objects.equals(this.sumGross, modelVoucher.sumGross) &&
        Objects.equals(this.sumNetAccounting, modelVoucher.sumNetAccounting) &&
        Objects.equals(this.sumTaxAccounting, modelVoucher.sumTaxAccounting) &&
        Objects.equals(this.sumGrossAccounting, modelVoucher.sumGrossAccounting) &&
        Objects.equals(this.taxType, modelVoucher.taxType) &&
        Objects.equals(this.creditDebit, modelVoucher.creditDebit) &&
        Objects.equals(this.hidden, modelVoucher.hidden) &&
        Objects.equals(this.costCentre, modelVoucher.costCentre) &&
        Objects.equals(this.origin, modelVoucher.origin) &&
        Objects.equals(this.voucherType, modelVoucher.voucherType) &&
        Objects.equals(this.recurringIntervall, modelVoucher.recurringIntervall) &&
        Objects.equals(this.recurringStartDate, modelVoucher.recurringStartDate) &&
        Objects.equals(this.recurringNextVoucher, modelVoucher.recurringNextVoucher) &&
        Objects.equals(this.recurringLastVoucher, modelVoucher.recurringLastVoucher) &&
        Objects.equals(this.recurringEndDate, modelVoucher.recurringEndDate) &&
        Objects.equals(this.enshrined, modelVoucher.enshrined) &&
        Objects.equals(this.inSource, modelVoucher.inSource) &&
        Objects.equals(this.taxSet, modelVoucher.taxSet) &&
        Objects.equals(this.iban, modelVoucher.iban) &&
        Objects.equals(this.accountingSpecialCase, modelVoucher.accountingSpecialCase) &&
        Objects.equals(this.paymentDeadline, modelVoucher.paymentDeadline) &&
        Objects.equals(this.tip, modelVoucher.tip);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, sevClient, createUser, voucherDate, supplier, supplierName, description, document, resultDisdar, documentPreview, payDate, status, object, sumNet, sumTax, sumGross, sumNetAccounting, sumTaxAccounting, sumGrossAccounting, taxType, creditDebit, hidden, costCentre, origin, voucherType, recurringIntervall, recurringStartDate, recurringNextVoucher, recurringLastVoucher, recurringEndDate, enshrined, inSource, taxSet, iban, accountingSpecialCase, paymentDeadline, tip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelVoucher {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    createUser: ").append(toIndentedString(createUser)).append("\n");
    sb.append("    voucherDate: ").append(toIndentedString(voucherDate)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    supplierName: ").append(toIndentedString(supplierName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    resultDisdar: ").append(toIndentedString(resultDisdar)).append("\n");
    sb.append("    documentPreview: ").append(toIndentedString(documentPreview)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    sumNet: ").append(toIndentedString(sumNet)).append("\n");
    sb.append("    sumTax: ").append(toIndentedString(sumTax)).append("\n");
    sb.append("    sumGross: ").append(toIndentedString(sumGross)).append("\n");
    sb.append("    sumNetAccounting: ").append(toIndentedString(sumNetAccounting)).append("\n");
    sb.append("    sumTaxAccounting: ").append(toIndentedString(sumTaxAccounting)).append("\n");
    sb.append("    sumGrossAccounting: ").append(toIndentedString(sumGrossAccounting)).append("\n");
    sb.append("    taxType: ").append(toIndentedString(taxType)).append("\n");
    sb.append("    creditDebit: ").append(toIndentedString(creditDebit)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    costCentre: ").append(toIndentedString(costCentre)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    voucherType: ").append(toIndentedString(voucherType)).append("\n");
    sb.append("    recurringIntervall: ").append(toIndentedString(recurringIntervall)).append("\n");
    sb.append("    recurringStartDate: ").append(toIndentedString(recurringStartDate)).append("\n");
    sb.append("    recurringNextVoucher: ").append(toIndentedString(recurringNextVoucher)).append("\n");
    sb.append("    recurringLastVoucher: ").append(toIndentedString(recurringLastVoucher)).append("\n");
    sb.append("    recurringEndDate: ").append(toIndentedString(recurringEndDate)).append("\n");
    sb.append("    enshrined: ").append(toIndentedString(enshrined)).append("\n");
    sb.append("    inSource: ").append(toIndentedString(inSource)).append("\n");
    sb.append("    taxSet: ").append(toIndentedString(taxSet)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    accountingSpecialCase: ").append(toIndentedString(accountingSpecialCase)).append("\n");
    sb.append("    paymentDeadline: ").append(toIndentedString(paymentDeadline)).append("\n");
    sb.append("    tip: ").append(toIndentedString(tip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
