/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.wichmann.sevdesk.model.ModelCheckAccount;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelCheckAccountTransaction
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:58:42.052+02:00[Europe/Berlin]")public class ModelCheckAccountTransaction {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("valueDate")

  private OffsetDateTime valueDate = null;

  @JsonProperty("entryDate")

  private OffsetDateTime entryDate = null;

  @JsonProperty("amount")

  private Float amount = null;

  @JsonProperty("gvCode")

  private String gvCode = null;

  @JsonProperty("entryText")

  private String entryText = null;

  @JsonProperty("primaNotaNo")

  private String primaNotaNo = null;

  @JsonProperty("paymtPurpose")

  private String paymtPurpose = null;

  @JsonProperty("payeePayerBankCode")

  private String payeePayerBankCode = null;

  @JsonProperty("payeePayerAcctNo")

  private String payeePayerAcctNo = null;

  @JsonProperty("payeePayerName")

  private String payeePayerName = null;

  @JsonProperty("checkAccount")

  private ModelCheckAccount checkAccount = null;

  @JsonProperty("status")

  private Integer status = null;

  @JsonProperty("score")

  private String score = null;

  @JsonProperty("compareHash")

  private String compareHash = null;

  @JsonProperty("entryType")

  private Object entryType = null;

  @JsonProperty("enshrined")

  private Boolean enshrined = null;

  @JsonProperty("sourceTransaction")

  private Object sourceTransaction = null;

  @JsonProperty("targetTransaction")

  private Object targetTransaction = null;

  @JsonProperty("obonoReceiptUuid")

  private String obonoReceiptUuid = null;
  public ModelCheckAccountTransaction create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the check account transaction was created
  * @return create
  **/
  @Schema(description = "date the check account transaction was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelCheckAccountTransaction update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the check account transaction was last updated
  * @return update
  **/
  @Schema(description = "date the check account transaction was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelCheckAccountTransaction sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelCheckAccountTransaction valueDate(OffsetDateTime valueDate) {
    this.valueDate = valueDate;
    return this;
  }

  

  /**
  * Get valueDate
  * @return valueDate
  **/
  @Schema(description = "")
  public OffsetDateTime getValueDate() {
    return valueDate;
  }
  public void setValueDate(OffsetDateTime valueDate) {
    this.valueDate = valueDate;
  }
  public ModelCheckAccountTransaction entryDate(OffsetDateTime entryDate) {
    this.entryDate = entryDate;
    return this;
  }

  

  /**
  * Get entryDate
  * @return entryDate
  **/
  @Schema(description = "")
  public OffsetDateTime getEntryDate() {
    return entryDate;
  }
  public void setEntryDate(OffsetDateTime entryDate) {
    this.entryDate = entryDate;
  }
  public ModelCheckAccountTransaction amount(Float amount) {
    this.amount = amount;
    return this;
  }

  

  /**
  * amount of the transaction
  * @return amount
  **/
  @Schema(description = "amount of the transaction")
  public Float getAmount() {
    return amount;
  }
  public void setAmount(Float amount) {
    this.amount = amount;
  }
  public ModelCheckAccountTransaction gvCode(String gvCode) {
    this.gvCode = gvCode;
    return this;
  }

  

  /**
  * Get gvCode
  * @return gvCode
  **/
  @Schema(description = "")
  public String getGvCode() {
    return gvCode;
  }
  public void setGvCode(String gvCode) {
    this.gvCode = gvCode;
  }
  public ModelCheckAccountTransaction entryText(String entryText) {
    this.entryText = entryText;
    return this;
  }

  

  /**
  * Get entryText
  * @return entryText
  **/
  @Schema(description = "")
  public String getEntryText() {
    return entryText;
  }
  public void setEntryText(String entryText) {
    this.entryText = entryText;
  }
  public ModelCheckAccountTransaction primaNotaNo(String primaNotaNo) {
    this.primaNotaNo = primaNotaNo;
    return this;
  }

  

  /**
  * Get primaNotaNo
  * @return primaNotaNo
  **/
  @Schema(description = "")
  public String getPrimaNotaNo() {
    return primaNotaNo;
  }
  public void setPrimaNotaNo(String primaNotaNo) {
    this.primaNotaNo = primaNotaNo;
  }
  public ModelCheckAccountTransaction paymtPurpose(String paymtPurpose) {
    this.paymtPurpose = paymtPurpose;
    return this;
  }

  

  /**
  * Get paymtPurpose
  * @return paymtPurpose
  **/
  @Schema(description = "")
  public String getPaymtPurpose() {
    return paymtPurpose;
  }
  public void setPaymtPurpose(String paymtPurpose) {
    this.paymtPurpose = paymtPurpose;
  }
  public ModelCheckAccountTransaction payeePayerBankCode(String payeePayerBankCode) {
    this.payeePayerBankCode = payeePayerBankCode;
    return this;
  }

  

  /**
  * payer bank code
  * @return payeePayerBankCode
  **/
  @Schema(description = "payer bank code")
  public String getPayeePayerBankCode() {
    return payeePayerBankCode;
  }
  public void setPayeePayerBankCode(String payeePayerBankCode) {
    this.payeePayerBankCode = payeePayerBankCode;
  }
  public ModelCheckAccountTransaction payeePayerAcctNo(String payeePayerAcctNo) {
    this.payeePayerAcctNo = payeePayerAcctNo;
    return this;
  }

  

  /**
  * payer account number
  * @return payeePayerAcctNo
  **/
  @Schema(description = "payer account number")
  public String getPayeePayerAcctNo() {
    return payeePayerAcctNo;
  }
  public void setPayeePayerAcctNo(String payeePayerAcctNo) {
    this.payeePayerAcctNo = payeePayerAcctNo;
  }
  public ModelCheckAccountTransaction payeePayerName(String payeePayerName) {
    this.payeePayerName = payeePayerName;
    return this;
  }

  

  /**
  * payer name
  * @return payeePayerName
  **/
  @Schema(description = "payer name")
  public String getPayeePayerName() {
    return payeePayerName;
  }
  public void setPayeePayerName(String payeePayerName) {
    this.payeePayerName = payeePayerName;
  }
  public ModelCheckAccountTransaction checkAccount(ModelCheckAccount checkAccount) {
    this.checkAccount = checkAccount;
    return this;
  }

  

  /**
  * Get checkAccount
  * @return checkAccount
  **/
  @Schema(description = "")
  public ModelCheckAccount getCheckAccount() {
    return checkAccount;
  }
  public void setCheckAccount(ModelCheckAccount checkAccount) {
    this.checkAccount = checkAccount;
  }
  public ModelCheckAccountTransaction status(Integer status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }
  public void setStatus(Integer status) {
    this.status = status;
  }
  public ModelCheckAccountTransaction score(String score) {
    this.score = score;
    return this;
  }

  

  /**
  * Get score
  * @return score
  **/
  @Schema(description = "")
  public String getScore() {
    return score;
  }
  public void setScore(String score) {
    this.score = score;
  }
  public ModelCheckAccountTransaction compareHash(String compareHash) {
    this.compareHash = compareHash;
    return this;
  }

  

  /**
  * hash to be compared
  * @return compareHash
  **/
  @Schema(description = "hash to be compared")
  public String getCompareHash() {
    return compareHash;
  }
  public void setCompareHash(String compareHash) {
    this.compareHash = compareHash;
  }
  public ModelCheckAccountTransaction entryType(Object entryType) {
    this.entryType = entryType;
    return this;
  }

  

  /**
  * Get entryType
  * @return entryType
  **/
  @Schema(description = "")
  public Object getEntryType() {
    return entryType;
  }
  public void setEntryType(Object entryType) {
    this.entryType = entryType;
  }
  public ModelCheckAccountTransaction enshrined(Boolean enshrined) {
    this.enshrined = enshrined;
    return this;
  }

  

  /**
  * Get enshrined
  * @return enshrined
  **/
  @Schema(description = "")
  public Boolean isEnshrined() {
    return enshrined;
  }
  public void setEnshrined(Boolean enshrined) {
    this.enshrined = enshrined;
  }
  public ModelCheckAccountTransaction sourceTransaction(Object sourceTransaction) {
    this.sourceTransaction = sourceTransaction;
    return this;
  }

  

  /**
  * source check account transaction used for transfers
  * @return sourceTransaction
  **/
  @Schema(description = "source check account transaction used for transfers")
  public Object getSourceTransaction() {
    return sourceTransaction;
  }
  public void setSourceTransaction(Object sourceTransaction) {
    this.sourceTransaction = sourceTransaction;
  }
  public ModelCheckAccountTransaction targetTransaction(Object targetTransaction) {
    this.targetTransaction = targetTransaction;
    return this;
  }

  

  /**
  * destination check account transaction used for transfers
  * @return targetTransaction
  **/
  @Schema(description = "destination check account transaction used for transfers")
  public Object getTargetTransaction() {
    return targetTransaction;
  }
  public void setTargetTransaction(Object targetTransaction) {
    this.targetTransaction = targetTransaction;
  }
  public ModelCheckAccountTransaction obonoReceiptUuid(String obonoReceiptUuid) {
    this.obonoReceiptUuid = obonoReceiptUuid;
    return this;
  }

  

  /**
  * Get obonoReceiptUuid
  * @return obonoReceiptUuid
  **/
  @Schema(description = "")
  public String getObonoReceiptUuid() {
    return obonoReceiptUuid;
  }
  public void setObonoReceiptUuid(String obonoReceiptUuid) {
    this.obonoReceiptUuid = obonoReceiptUuid;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelCheckAccountTransaction modelCheckAccountTransaction = (ModelCheckAccountTransaction) o;
    return Objects.equals(this.create, modelCheckAccountTransaction.create) &&
        Objects.equals(this.update, modelCheckAccountTransaction.update) &&
        Objects.equals(this.sevClient, modelCheckAccountTransaction.sevClient) &&
        Objects.equals(this.valueDate, modelCheckAccountTransaction.valueDate) &&
        Objects.equals(this.entryDate, modelCheckAccountTransaction.entryDate) &&
        Objects.equals(this.amount, modelCheckAccountTransaction.amount) &&
        Objects.equals(this.gvCode, modelCheckAccountTransaction.gvCode) &&
        Objects.equals(this.entryText, modelCheckAccountTransaction.entryText) &&
        Objects.equals(this.primaNotaNo, modelCheckAccountTransaction.primaNotaNo) &&
        Objects.equals(this.paymtPurpose, modelCheckAccountTransaction.paymtPurpose) &&
        Objects.equals(this.payeePayerBankCode, modelCheckAccountTransaction.payeePayerBankCode) &&
        Objects.equals(this.payeePayerAcctNo, modelCheckAccountTransaction.payeePayerAcctNo) &&
        Objects.equals(this.payeePayerName, modelCheckAccountTransaction.payeePayerName) &&
        Objects.equals(this.checkAccount, modelCheckAccountTransaction.checkAccount) &&
        Objects.equals(this.status, modelCheckAccountTransaction.status) &&
        Objects.equals(this.score, modelCheckAccountTransaction.score) &&
        Objects.equals(this.compareHash, modelCheckAccountTransaction.compareHash) &&
        Objects.equals(this.entryType, modelCheckAccountTransaction.entryType) &&
        Objects.equals(this.enshrined, modelCheckAccountTransaction.enshrined) &&
        Objects.equals(this.sourceTransaction, modelCheckAccountTransaction.sourceTransaction) &&
        Objects.equals(this.targetTransaction, modelCheckAccountTransaction.targetTransaction) &&
        Objects.equals(this.obonoReceiptUuid, modelCheckAccountTransaction.obonoReceiptUuid);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, sevClient, valueDate, entryDate, amount, gvCode, entryText, primaNotaNo, paymtPurpose, payeePayerBankCode, payeePayerAcctNo, payeePayerName, checkAccount, status, score, compareHash, entryType, enshrined, sourceTransaction, targetTransaction, obonoReceiptUuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelCheckAccountTransaction {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    valueDate: ").append(toIndentedString(valueDate)).append("\n");
    sb.append("    entryDate: ").append(toIndentedString(entryDate)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    gvCode: ").append(toIndentedString(gvCode)).append("\n");
    sb.append("    entryText: ").append(toIndentedString(entryText)).append("\n");
    sb.append("    primaNotaNo: ").append(toIndentedString(primaNotaNo)).append("\n");
    sb.append("    paymtPurpose: ").append(toIndentedString(paymtPurpose)).append("\n");
    sb.append("    payeePayerBankCode: ").append(toIndentedString(payeePayerBankCode)).append("\n");
    sb.append("    payeePayerAcctNo: ").append(toIndentedString(payeePayerAcctNo)).append("\n");
    sb.append("    payeePayerName: ").append(toIndentedString(payeePayerName)).append("\n");
    sb.append("    checkAccount: ").append(toIndentedString(checkAccount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    compareHash: ").append(toIndentedString(compareHash)).append("\n");
    sb.append("    entryType: ").append(toIndentedString(entryType)).append("\n");
    sb.append("    enshrined: ").append(toIndentedString(enshrined)).append("\n");
    sb.append("    sourceTransaction: ").append(toIndentedString(sourceTransaction)).append("\n");
    sb.append("    targetTransaction: ").append(toIndentedString(targetTransaction)).append("\n");
    sb.append("    obonoReceiptUuid: ").append(toIndentedString(obonoReceiptUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
