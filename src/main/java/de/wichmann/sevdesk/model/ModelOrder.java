/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.wichmann.sevdesk.model.ModelContact;
import de.wichmann.sevdesk.model.ModelContactAddress;
import de.wichmann.sevdesk.model.ModelEntryType;
import de.wichmann.sevdesk.model.ModelSevUser;
import de.wichmann.sevdesk.model.ModelStaticCountry;
import de.wichmann.sevdesk.model.ModelTaxSet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;

/**
 * ModelOrder
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-26T00:13:41.764+02:00[Europe/Berlin]")public class ModelOrder {

  @JsonProperty("create")

  private OffsetDateTime create = null;

  @JsonProperty("update")

  private OffsetDateTime update = null;

  @JsonProperty("oderNumber")

  private String oderNumber = null;

  @JsonProperty("contact")

  private ModelContact contact = null;

  @JsonProperty("orderDate")

  private OffsetDateTime orderDate = null;

  @JsonProperty("status")

  private Integer status = null;

  @JsonProperty("header")

  private String header = null;

  @JsonProperty("headText")

  private String headText = null;

  @JsonProperty("footText")

  private String footText = null;

  @JsonProperty("addressName")

  private String addressName = null;

  @JsonProperty("addressStreet")

  private String addressStreet = null;

  @JsonProperty("addressZip")

  private String addressZip = null;

  @JsonProperty("addressCity")

  private String addressCity = null;

  @JsonProperty("addressCountry")

  private ModelStaticCountry addressCountry = null;

  @JsonProperty("createUser")

  private ModelSevUser createUser = null;

  @JsonProperty("sevClient")

  private Object sevClient = null;

  @JsonProperty("deliveryTerms")

  private String deliveryTerms = null;

  @JsonProperty("paymentTerms")

  private String paymentTerms = null;

  @JsonProperty("origin")

  private Object origin = null;

  @JsonProperty("version")

  private Integer version = null;

  @JsonProperty("smallSettlement")

  private Boolean smallSettlement = null;

  @JsonProperty("contactPerson")

  private ModelSevUser contactPerson = null;

  @JsonProperty("taxRate")

  private Float taxRate = null;

  @JsonProperty("taxSet")

  private ModelTaxSet taxSet = null;

  @JsonProperty("taxText")

  private String taxText = null;

  @JsonProperty("addressParentName")

  private String addressParentName = null;

  @JsonProperty("addressContactRef")

  private ModelContactAddress addressContactRef = null;

  @JsonProperty("taxType")

  private String taxType = null;

  @JsonProperty("orderType")

  private String orderType = null;

  @JsonProperty("sendDate")

  private OffsetDateTime sendDate = null;

  @JsonProperty("addressParentName2")

  private String addressParentName2 = null;

  @JsonProperty("addressName2")

  private String addressName2 = null;

  @JsonProperty("addressGender")

  private String addressGender = null;

  @JsonProperty("address")

  private ModelContactAddress address = null;

  @JsonProperty("currency")

  private String currency = null;

  @JsonProperty("sumNet")

  private Float sumNet = null;

  @JsonProperty("sumTax")

  private Float sumTax = null;

  @JsonProperty("sumGross")

  private Float sumGross = null;

  @JsonProperty("sumDiscounts")

  private Float sumDiscounts = null;

  @JsonProperty("sumNetForeignCurrency")

  private Float sumNetForeignCurrency = null;

  @JsonProperty("sumTaxForeignCurrency")

  private Float sumTaxForeignCurrency = null;

  @JsonProperty("sumGrossForeignCurrency")

  private Float sumGrossForeignCurrency = null;

  @JsonProperty("sumDiscountsForeignCurrency")

  private Float sumDiscountsForeignCurrency = null;

  @JsonProperty("weight")

  private Float weight = null;

  @JsonProperty("entryType")

  private ModelEntryType entryType = null;

  @JsonProperty("costumerInternalNote")

  private String costumerInternalNote = null;

  @JsonProperty("showNet")

  private Boolean showNet = null;

  @JsonProperty("sendType")

  private String sendType = null;
  public ModelOrder create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

  

  /**
  * date the order was created
  * @return create
  **/
  @Schema(description = "date the order was created")
  public OffsetDateTime getCreate() {
    return create;
  }
  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }
  public ModelOrder update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

  

  /**
  * date the order was last updated
  * @return update
  **/
  @Schema(description = "date the order was last updated")
  public OffsetDateTime getUpdate() {
    return update;
  }
  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }
  public ModelOrder oderNumber(String oderNumber) {
    this.oderNumber = oderNumber;
    return this;
  }

  

  /**
  * Get oderNumber
  * @return oderNumber
  **/
  @Schema(description = "")
  public String getOderNumber() {
    return oderNumber;
  }
  public void setOderNumber(String oderNumber) {
    this.oderNumber = oderNumber;
  }
  public ModelOrder contact(ModelContact contact) {
    this.contact = contact;
    return this;
  }

  

  /**
  * Get contact
  * @return contact
  **/
  @Schema(description = "")
  public ModelContact getContact() {
    return contact;
  }
  public void setContact(ModelContact contact) {
    this.contact = contact;
  }
  public ModelOrder orderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
    return this;
  }

  

  /**
  * Get orderDate
  * @return orderDate
  **/
  @Schema(description = "")
  public OffsetDateTime getOrderDate() {
    return orderDate;
  }
  public void setOrderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
  }
  public ModelOrder status(Integer status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }
  public void setStatus(Integer status) {
    this.status = status;
  }
  public ModelOrder header(String header) {
    this.header = header;
    return this;
  }

  

  /**
  * Get header
  * @return header
  **/
  @Schema(description = "")
  public String getHeader() {
    return header;
  }
  public void setHeader(String header) {
    this.header = header;
  }
  public ModelOrder headText(String headText) {
    this.headText = headText;
    return this;
  }

  

  /**
  * Get headText
  * @return headText
  **/
  @Schema(description = "")
  public String getHeadText() {
    return headText;
  }
  public void setHeadText(String headText) {
    this.headText = headText;
  }
  public ModelOrder footText(String footText) {
    this.footText = footText;
    return this;
  }

  

  /**
  * Get footText
  * @return footText
  **/
  @Schema(description = "")
  public String getFootText() {
    return footText;
  }
  public void setFootText(String footText) {
    this.footText = footText;
  }
  public ModelOrder addressName(String addressName) {
    this.addressName = addressName;
    return this;
  }

  

  /**
  * Get addressName
  * @return addressName
  **/
  @Schema(description = "")
  public String getAddressName() {
    return addressName;
  }
  public void setAddressName(String addressName) {
    this.addressName = addressName;
  }
  public ModelOrder addressStreet(String addressStreet) {
    this.addressStreet = addressStreet;
    return this;
  }

  

  /**
  * Get addressStreet
  * @return addressStreet
  **/
  @Schema(description = "")
  public String getAddressStreet() {
    return addressStreet;
  }
  public void setAddressStreet(String addressStreet) {
    this.addressStreet = addressStreet;
  }
  public ModelOrder addressZip(String addressZip) {
    this.addressZip = addressZip;
    return this;
  }

  

  /**
  * Get addressZip
  * @return addressZip
  **/
  @Schema(description = "")
  public String getAddressZip() {
    return addressZip;
  }
  public void setAddressZip(String addressZip) {
    this.addressZip = addressZip;
  }
  public ModelOrder addressCity(String addressCity) {
    this.addressCity = addressCity;
    return this;
  }

  

  /**
  * Get addressCity
  * @return addressCity
  **/
  @Schema(description = "")
  public String getAddressCity() {
    return addressCity;
  }
  public void setAddressCity(String addressCity) {
    this.addressCity = addressCity;
  }
  public ModelOrder addressCountry(ModelStaticCountry addressCountry) {
    this.addressCountry = addressCountry;
    return this;
  }

  

  /**
  * Get addressCountry
  * @return addressCountry
  **/
  @Schema(description = "")
  public ModelStaticCountry getAddressCountry() {
    return addressCountry;
  }
  public void setAddressCountry(ModelStaticCountry addressCountry) {
    this.addressCountry = addressCountry;
  }
  public ModelOrder createUser(ModelSevUser createUser) {
    this.createUser = createUser;
    return this;
  }

  

  /**
  * Get createUser
  * @return createUser
  **/
  @Schema(description = "")
  public ModelSevUser getCreateUser() {
    return createUser;
  }
  public void setCreateUser(ModelSevUser createUser) {
    this.createUser = createUser;
  }
  public ModelOrder sevClient(Object sevClient) {
    this.sevClient = sevClient;
    return this;
  }

  

  /**
  * sevClient is the unique id every customer has and is used in nearly all operations
  * @return sevClient
  **/
  @Schema(description = "sevClient is the unique id every customer has and is used in nearly all operations")
  public Object getSevClient() {
    return sevClient;
  }
  public void setSevClient(Object sevClient) {
    this.sevClient = sevClient;
  }
  public ModelOrder deliveryTerms(String deliveryTerms) {
    this.deliveryTerms = deliveryTerms;
    return this;
  }

  

  /**
  * Get deliveryTerms
  * @return deliveryTerms
  **/
  @Schema(description = "")
  public String getDeliveryTerms() {
    return deliveryTerms;
  }
  public void setDeliveryTerms(String deliveryTerms) {
    this.deliveryTerms = deliveryTerms;
  }
  public ModelOrder paymentTerms(String paymentTerms) {
    this.paymentTerms = paymentTerms;
    return this;
  }

  

  /**
  * Get paymentTerms
  * @return paymentTerms
  **/
  @Schema(description = "")
  public String getPaymentTerms() {
    return paymentTerms;
  }
  public void setPaymentTerms(String paymentTerms) {
    this.paymentTerms = paymentTerms;
  }
  public ModelOrder origin(Object origin) {
    this.origin = origin;
    return this;
  }

  

  /**
  * Get origin
  * @return origin
  **/
  @Schema(description = "")
  public Object getOrigin() {
    return origin;
  }
  public void setOrigin(Object origin) {
    this.origin = origin;
  }
  public ModelOrder version(Integer version) {
    this.version = version;
    return this;
  }

  

  /**
  * Get version
  * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }
  public void setVersion(Integer version) {
    this.version = version;
  }
  public ModelOrder smallSettlement(Boolean smallSettlement) {
    this.smallSettlement = smallSettlement;
    return this;
  }

  

  /**
  * Get smallSettlement
  * @return smallSettlement
  **/
  @Schema(description = "")
  public Boolean isSmallSettlement() {
    return smallSettlement;
  }
  public void setSmallSettlement(Boolean smallSettlement) {
    this.smallSettlement = smallSettlement;
  }
  public ModelOrder contactPerson(ModelSevUser contactPerson) {
    this.contactPerson = contactPerson;
    return this;
  }

  

  /**
  * Get contactPerson
  * @return contactPerson
  **/
  @Schema(description = "")
  public ModelSevUser getContactPerson() {
    return contactPerson;
  }
  public void setContactPerson(ModelSevUser contactPerson) {
    this.contactPerson = contactPerson;
  }
  public ModelOrder taxRate(Float taxRate) {
    this.taxRate = taxRate;
    return this;
  }

  

  /**
  * Get taxRate
  * @return taxRate
  **/
  @Schema(description = "")
  public Float getTaxRate() {
    return taxRate;
  }
  public void setTaxRate(Float taxRate) {
    this.taxRate = taxRate;
  }
  public ModelOrder taxSet(ModelTaxSet taxSet) {
    this.taxSet = taxSet;
    return this;
  }

  

  /**
  * Get taxSet
  * @return taxSet
  **/
  @Schema(description = "")
  public ModelTaxSet getTaxSet() {
    return taxSet;
  }
  public void setTaxSet(ModelTaxSet taxSet) {
    this.taxSet = taxSet;
  }
  public ModelOrder taxText(String taxText) {
    this.taxText = taxText;
    return this;
  }

  

  /**
  * Get taxText
  * @return taxText
  **/
  @Schema(description = "")
  public String getTaxText() {
    return taxText;
  }
  public void setTaxText(String taxText) {
    this.taxText = taxText;
  }
  public ModelOrder addressParentName(String addressParentName) {
    this.addressParentName = addressParentName;
    return this;
  }

  

  /**
  * Get addressParentName
  * @return addressParentName
  **/
  @Schema(description = "")
  public String getAddressParentName() {
    return addressParentName;
  }
  public void setAddressParentName(String addressParentName) {
    this.addressParentName = addressParentName;
  }
  public ModelOrder addressContactRef(ModelContactAddress addressContactRef) {
    this.addressContactRef = addressContactRef;
    return this;
  }

  

  /**
  * Get addressContactRef
  * @return addressContactRef
  **/
  @Schema(description = "")
  public ModelContactAddress getAddressContactRef() {
    return addressContactRef;
  }
  public void setAddressContactRef(ModelContactAddress addressContactRef) {
    this.addressContactRef = addressContactRef;
  }
  public ModelOrder taxType(String taxType) {
    this.taxType = taxType;
    return this;
  }

  

  /**
  * Get taxType
  * @return taxType
  **/
  @Schema(description = "")
  public String getTaxType() {
    return taxType;
  }
  public void setTaxType(String taxType) {
    this.taxType = taxType;
  }
  public ModelOrder orderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

  

  /**
  * Get orderType
  * @return orderType
  **/
  @Schema(description = "")
  public String getOrderType() {
    return orderType;
  }
  public void setOrderType(String orderType) {
    this.orderType = orderType;
  }
  public ModelOrder sendDate(OffsetDateTime sendDate) {
    this.sendDate = sendDate;
    return this;
  }

  

  /**
  * date the order was sent
  * @return sendDate
  **/
  @Schema(description = "date the order was sent")
  public OffsetDateTime getSendDate() {
    return sendDate;
  }
  public void setSendDate(OffsetDateTime sendDate) {
    this.sendDate = sendDate;
  }
  public ModelOrder addressParentName2(String addressParentName2) {
    this.addressParentName2 = addressParentName2;
    return this;
  }

  

  /**
  * Get addressParentName2
  * @return addressParentName2
  **/
  @Schema(description = "")
  public String getAddressParentName2() {
    return addressParentName2;
  }
  public void setAddressParentName2(String addressParentName2) {
    this.addressParentName2 = addressParentName2;
  }
  public ModelOrder addressName2(String addressName2) {
    this.addressName2 = addressName2;
    return this;
  }

  

  /**
  * Get addressName2
  * @return addressName2
  **/
  @Schema(description = "")
  public String getAddressName2() {
    return addressName2;
  }
  public void setAddressName2(String addressName2) {
    this.addressName2 = addressName2;
  }
  public ModelOrder addressGender(String addressGender) {
    this.addressGender = addressGender;
    return this;
  }

  

  /**
  * Get addressGender
  * @return addressGender
  **/
  @Schema(description = "")
  public String getAddressGender() {
    return addressGender;
  }
  public void setAddressGender(String addressGender) {
    this.addressGender = addressGender;
  }
  public ModelOrder address(ModelContactAddress address) {
    this.address = address;
    return this;
  }

  

  /**
  * Get address
  * @return address
  **/
  @Schema(description = "")
  public ModelContactAddress getAddress() {
    return address;
  }
  public void setAddress(ModelContactAddress address) {
    this.address = address;
  }
  public ModelOrder currency(String currency) {
    this.currency = currency;
    return this;
  }

  

  /**
  * Get currency
  * @return currency
  **/
  @Schema(description = "")
  public String getCurrency() {
    return currency;
  }
  public void setCurrency(String currency) {
    this.currency = currency;
  }
  public ModelOrder sumNet(Float sumNet) {
    this.sumNet = sumNet;
    return this;
  }

  

  /**
  * Get sumNet
  * @return sumNet
  **/
  @Schema(description = "")
  public Float getSumNet() {
    return sumNet;
  }
  public void setSumNet(Float sumNet) {
    this.sumNet = sumNet;
  }
  public ModelOrder sumTax(Float sumTax) {
    this.sumTax = sumTax;
    return this;
  }

  

  /**
  * Get sumTax
  * @return sumTax
  **/
  @Schema(description = "")
  public Float getSumTax() {
    return sumTax;
  }
  public void setSumTax(Float sumTax) {
    this.sumTax = sumTax;
  }
  public ModelOrder sumGross(Float sumGross) {
    this.sumGross = sumGross;
    return this;
  }

  

  /**
  * Get sumGross
  * @return sumGross
  **/
  @Schema(description = "")
  public Float getSumGross() {
    return sumGross;
  }
  public void setSumGross(Float sumGross) {
    this.sumGross = sumGross;
  }
  public ModelOrder sumDiscounts(Float sumDiscounts) {
    this.sumDiscounts = sumDiscounts;
    return this;
  }

  

  /**
  * Get sumDiscounts
  * @return sumDiscounts
  **/
  @Schema(description = "")
  public Float getSumDiscounts() {
    return sumDiscounts;
  }
  public void setSumDiscounts(Float sumDiscounts) {
    this.sumDiscounts = sumDiscounts;
  }
  public ModelOrder sumNetForeignCurrency(Float sumNetForeignCurrency) {
    this.sumNetForeignCurrency = sumNetForeignCurrency;
    return this;
  }

  

  /**
  * Get sumNetForeignCurrency
  * @return sumNetForeignCurrency
  **/
  @Schema(description = "")
  public Float getSumNetForeignCurrency() {
    return sumNetForeignCurrency;
  }
  public void setSumNetForeignCurrency(Float sumNetForeignCurrency) {
    this.sumNetForeignCurrency = sumNetForeignCurrency;
  }
  public ModelOrder sumTaxForeignCurrency(Float sumTaxForeignCurrency) {
    this.sumTaxForeignCurrency = sumTaxForeignCurrency;
    return this;
  }

  

  /**
  * Get sumTaxForeignCurrency
  * @return sumTaxForeignCurrency
  **/
  @Schema(description = "")
  public Float getSumTaxForeignCurrency() {
    return sumTaxForeignCurrency;
  }
  public void setSumTaxForeignCurrency(Float sumTaxForeignCurrency) {
    this.sumTaxForeignCurrency = sumTaxForeignCurrency;
  }
  public ModelOrder sumGrossForeignCurrency(Float sumGrossForeignCurrency) {
    this.sumGrossForeignCurrency = sumGrossForeignCurrency;
    return this;
  }

  

  /**
  * Get sumGrossForeignCurrency
  * @return sumGrossForeignCurrency
  **/
  @Schema(description = "")
  public Float getSumGrossForeignCurrency() {
    return sumGrossForeignCurrency;
  }
  public void setSumGrossForeignCurrency(Float sumGrossForeignCurrency) {
    this.sumGrossForeignCurrency = sumGrossForeignCurrency;
  }
  public ModelOrder sumDiscountsForeignCurrency(Float sumDiscountsForeignCurrency) {
    this.sumDiscountsForeignCurrency = sumDiscountsForeignCurrency;
    return this;
  }

  

  /**
  * Get sumDiscountsForeignCurrency
  * @return sumDiscountsForeignCurrency
  **/
  @Schema(description = "")
  public Float getSumDiscountsForeignCurrency() {
    return sumDiscountsForeignCurrency;
  }
  public void setSumDiscountsForeignCurrency(Float sumDiscountsForeignCurrency) {
    this.sumDiscountsForeignCurrency = sumDiscountsForeignCurrency;
  }
  public ModelOrder weight(Float weight) {
    this.weight = weight;
    return this;
  }

  

  /**
  * Get weight
  * @return weight
  **/
  @Schema(description = "")
  public Float getWeight() {
    return weight;
  }
  public void setWeight(Float weight) {
    this.weight = weight;
  }
  public ModelOrder entryType(ModelEntryType entryType) {
    this.entryType = entryType;
    return this;
  }

  

  /**
  * Get entryType
  * @return entryType
  **/
  @Schema(description = "")
  public ModelEntryType getEntryType() {
    return entryType;
  }
  public void setEntryType(ModelEntryType entryType) {
    this.entryType = entryType;
  }
  public ModelOrder costumerInternalNote(String costumerInternalNote) {
    this.costumerInternalNote = costumerInternalNote;
    return this;
  }

  

  /**
  * Get costumerInternalNote
  * @return costumerInternalNote
  **/
  @Schema(description = "")
  public String getCostumerInternalNote() {
    return costumerInternalNote;
  }
  public void setCostumerInternalNote(String costumerInternalNote) {
    this.costumerInternalNote = costumerInternalNote;
  }
  public ModelOrder showNet(Boolean showNet) {
    this.showNet = showNet;
    return this;
  }

  

  /**
  * Get showNet
  * @return showNet
  **/
  @Schema(description = "")
  public Boolean isShowNet() {
    return showNet;
  }
  public void setShowNet(Boolean showNet) {
    this.showNet = showNet;
  }
  public ModelOrder sendType(String sendType) {
    this.sendType = sendType;
    return this;
  }

  

  /**
  * Get sendType
  * @return sendType
  **/
  @Schema(description = "")
  public String getSendType() {
    return sendType;
  }
  public void setSendType(String sendType) {
    this.sendType = sendType;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelOrder modelOrder = (ModelOrder) o;
    return Objects.equals(this.create, modelOrder.create) &&
        Objects.equals(this.update, modelOrder.update) &&
        Objects.equals(this.oderNumber, modelOrder.oderNumber) &&
        Objects.equals(this.contact, modelOrder.contact) &&
        Objects.equals(this.orderDate, modelOrder.orderDate) &&
        Objects.equals(this.status, modelOrder.status) &&
        Objects.equals(this.header, modelOrder.header) &&
        Objects.equals(this.headText, modelOrder.headText) &&
        Objects.equals(this.footText, modelOrder.footText) &&
        Objects.equals(this.addressName, modelOrder.addressName) &&
        Objects.equals(this.addressStreet, modelOrder.addressStreet) &&
        Objects.equals(this.addressZip, modelOrder.addressZip) &&
        Objects.equals(this.addressCity, modelOrder.addressCity) &&
        Objects.equals(this.addressCountry, modelOrder.addressCountry) &&
        Objects.equals(this.createUser, modelOrder.createUser) &&
        Objects.equals(this.sevClient, modelOrder.sevClient) &&
        Objects.equals(this.deliveryTerms, modelOrder.deliveryTerms) &&
        Objects.equals(this.paymentTerms, modelOrder.paymentTerms) &&
        Objects.equals(this.origin, modelOrder.origin) &&
        Objects.equals(this.version, modelOrder.version) &&
        Objects.equals(this.smallSettlement, modelOrder.smallSettlement) &&
        Objects.equals(this.contactPerson, modelOrder.contactPerson) &&
        Objects.equals(this.taxRate, modelOrder.taxRate) &&
        Objects.equals(this.taxSet, modelOrder.taxSet) &&
        Objects.equals(this.taxText, modelOrder.taxText) &&
        Objects.equals(this.addressParentName, modelOrder.addressParentName) &&
        Objects.equals(this.addressContactRef, modelOrder.addressContactRef) &&
        Objects.equals(this.taxType, modelOrder.taxType) &&
        Objects.equals(this.orderType, modelOrder.orderType) &&
        Objects.equals(this.sendDate, modelOrder.sendDate) &&
        Objects.equals(this.addressParentName2, modelOrder.addressParentName2) &&
        Objects.equals(this.addressName2, modelOrder.addressName2) &&
        Objects.equals(this.addressGender, modelOrder.addressGender) &&
        Objects.equals(this.address, modelOrder.address) &&
        Objects.equals(this.currency, modelOrder.currency) &&
        Objects.equals(this.sumNet, modelOrder.sumNet) &&
        Objects.equals(this.sumTax, modelOrder.sumTax) &&
        Objects.equals(this.sumGross, modelOrder.sumGross) &&
        Objects.equals(this.sumDiscounts, modelOrder.sumDiscounts) &&
        Objects.equals(this.sumNetForeignCurrency, modelOrder.sumNetForeignCurrency) &&
        Objects.equals(this.sumTaxForeignCurrency, modelOrder.sumTaxForeignCurrency) &&
        Objects.equals(this.sumGrossForeignCurrency, modelOrder.sumGrossForeignCurrency) &&
        Objects.equals(this.sumDiscountsForeignCurrency, modelOrder.sumDiscountsForeignCurrency) &&
        Objects.equals(this.weight, modelOrder.weight) &&
        Objects.equals(this.entryType, modelOrder.entryType) &&
        Objects.equals(this.costumerInternalNote, modelOrder.costumerInternalNote) &&
        Objects.equals(this.showNet, modelOrder.showNet) &&
        Objects.equals(this.sendType, modelOrder.sendType);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(create, update, oderNumber, contact, orderDate, status, header, headText, footText, addressName, addressStreet, addressZip, addressCity, addressCountry, createUser, sevClient, deliveryTerms, paymentTerms, origin, version, smallSettlement, contactPerson, taxRate, taxSet, taxText, addressParentName, addressContactRef, taxType, orderType, sendDate, addressParentName2, addressName2, addressGender, address, currency, sumNet, sumTax, sumGross, sumDiscounts, sumNetForeignCurrency, sumTaxForeignCurrency, sumGrossForeignCurrency, sumDiscountsForeignCurrency, weight, entryType, costumerInternalNote, showNet, sendType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelOrder {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    oderNumber: ").append(toIndentedString(oderNumber)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    headText: ").append(toIndentedString(headText)).append("\n");
    sb.append("    footText: ").append(toIndentedString(footText)).append("\n");
    sb.append("    addressName: ").append(toIndentedString(addressName)).append("\n");
    sb.append("    addressStreet: ").append(toIndentedString(addressStreet)).append("\n");
    sb.append("    addressZip: ").append(toIndentedString(addressZip)).append("\n");
    sb.append("    addressCity: ").append(toIndentedString(addressCity)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    createUser: ").append(toIndentedString(createUser)).append("\n");
    sb.append("    sevClient: ").append(toIndentedString(sevClient)).append("\n");
    sb.append("    deliveryTerms: ").append(toIndentedString(deliveryTerms)).append("\n");
    sb.append("    paymentTerms: ").append(toIndentedString(paymentTerms)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    smallSettlement: ").append(toIndentedString(smallSettlement)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    taxSet: ").append(toIndentedString(taxSet)).append("\n");
    sb.append("    taxText: ").append(toIndentedString(taxText)).append("\n");
    sb.append("    addressParentName: ").append(toIndentedString(addressParentName)).append("\n");
    sb.append("    addressContactRef: ").append(toIndentedString(addressContactRef)).append("\n");
    sb.append("    taxType: ").append(toIndentedString(taxType)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    sendDate: ").append(toIndentedString(sendDate)).append("\n");
    sb.append("    addressParentName2: ").append(toIndentedString(addressParentName2)).append("\n");
    sb.append("    addressName2: ").append(toIndentedString(addressName2)).append("\n");
    sb.append("    addressGender: ").append(toIndentedString(addressGender)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    sumNet: ").append(toIndentedString(sumNet)).append("\n");
    sb.append("    sumTax: ").append(toIndentedString(sumTax)).append("\n");
    sb.append("    sumGross: ").append(toIndentedString(sumGross)).append("\n");
    sb.append("    sumDiscounts: ").append(toIndentedString(sumDiscounts)).append("\n");
    sb.append("    sumNetForeignCurrency: ").append(toIndentedString(sumNetForeignCurrency)).append("\n");
    sb.append("    sumTaxForeignCurrency: ").append(toIndentedString(sumTaxForeignCurrency)).append("\n");
    sb.append("    sumGrossForeignCurrency: ").append(toIndentedString(sumGrossForeignCurrency)).append("\n");
    sb.append("    sumDiscountsForeignCurrency: ").append(toIndentedString(sumDiscountsForeignCurrency)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    entryType: ").append(toIndentedString(entryType)).append("\n");
    sb.append("    costumerInternalNote: ").append(toIndentedString(costumerInternalNote)).append("\n");
    sb.append("    showNet: ").append(toIndentedString(showNet)).append("\n");
    sb.append("    sendType: ").append(toIndentedString(sendType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
