/*
 * sevDesk
 * # Getting started  The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.wichmann.sevdesk.api;

import java.io.File;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExportApi
 */
@Ignore
public class ExportApiTest {

    private final ExportApi api = new ExportApi();

    /**
     * Export the specified contact as csv
     *
     * Calls contactCsv() in Export.php to export the specified contact as a csv.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportContactCsvTest() {
        Integer contactId = null;
        String contactObjectName = null;
        Boolean download = null;
        File response = api.exportContactCsv(contactId, contactObjectName, download);

        // TODO: test validations
    }
    /**
     * Export the contact list as csv
     *
     * Calls contactListCsv() in Export.php to export the contact list as a csv.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportContactListCsvTest() {
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        Boolean download = null;
        Integer sevQueryLimit = null;
        Boolean sevQueryFilterDepth = null;
        File response = api.exportContactListCsv(sevQueryModelName, sevQueryObjectName, download, sevQueryLimit, sevQueryFilterDepth);

        // TODO: test validations
    }
    /**
     * Datev export as zip with csv´s
     *
     * Calls datev() in Export.php to export the datev as a csv.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportDatevTest() {
        String scope = null;
        String start = null;
        String end = null;
        Boolean withEnshrined = null;
        Object enshrine = null;
        Boolean download = null;
        File response = api.exportDatev(scope, start, end, withEnshrined, enshrine, download);

        // TODO: test validations
    }
    /**
     * Export zip for voucher upload
     *
     * Calls datevZip() in Export.php to export the zip for voucher upload.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportDatevZipTest() {
        String scope = null;
        String start = null;
        String end = null;
        Boolean withEnshrined = null;
        Boolean download = null;
        File response = api.exportDatevZip(scope, start, end, withEnshrined, download);

        // TODO: test validations
    }
    /**
     * Export the inventory part log as csv
     *
     * Calls inventoryPartLogListCsv() in Export.php to export the inventory part log list as a csv.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportInventoryPartLogListTest() {
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        Boolean download = null;
        Integer sevQueryLimit = null;
        Integer sevQueryFilterPartId = null;
        String sevQueryFilterPartObjectName = null;
        File response = api.exportInventoryPartLogList(sevQueryModelName, sevQueryObjectName, download, sevQueryLimit, sevQueryFilterPartId, sevQueryFilterPartObjectName);

        // TODO: test validations
    }
    /**
     * Export the invoice list as csv
     *
     * Calls invoiceCsv() in Export.php to export the invoice list as a csv.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportInvoiceCsvTest() {
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        Boolean download = null;
        Integer sevQueryLimit = null;
        File response = api.exportInvoiceCsv(sevQueryModelName, sevQueryObjectName, download, sevQueryLimit);

        // TODO: test validations
    }
    /**
     * Export the invoice list as zip with csv´s
     *
     * Calls invoiceZip() in Export.php to export the invoice list as a zip with csv´s.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportInvoiceZipTest() {
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        Boolean download = null;
        Integer sevQueryLimit = null;
        File response = api.exportInvoiceZip(sevQueryModelName, sevQueryObjectName, download, sevQueryLimit);

        // TODO: test validations
    }
    /**
     * Export the parts as csv
     *
     * Calls partCsv() in Export.php to export the parts as csv.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportPartCsvTest() {
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        Boolean download = null;
        Integer sevQueryLimit = null;
        File response = api.exportPartCsv(sevQueryModelName, sevQueryObjectName, download, sevQueryLimit);

        // TODO: test validations
    }
    /**
     * Pebe export as zip with csv´s
     *
     * Calls pebe() in Export.php to export the pebe zip with csv´s.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportPebeTest() {
        String scope = null;
        String start = null;
        String end = null;
        Boolean withEnshrined = null;
        Object enshrine = null;
        Boolean download = null;
        File response = api.exportPebe(scope, start, end, withEnshrined, enshrine, download);

        // TODO: test validations
    }
    /**
     * Export the transactions as csv
     *
     * Calls transactionsCsv() in Export.php to export the transactions as csv. Optionally you can provide a specific check account.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportTransactionsCsvTest() {
        Boolean sevQueryFilterRegister = null;
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        String sevQueryOrderEntryDate = null;
        Boolean download = null;
        Integer checkAccountId = null;
        String checkAccountObjectName = null;
        Integer sevQueryLimit = null;
        File response = api.exportTransactionsCsv(sevQueryFilterRegister, sevQueryModelName, sevQueryObjectName, sevQueryOrderEntryDate, download, checkAccountId, checkAccountObjectName, sevQueryLimit);

        // TODO: test validations
    }
    /**
     * Export the voucher list as csv
     *
     * Calls voucherListCsv() in Export.php to export the voucher list as a csv.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportVoucherListCsvTest() {
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        Boolean download = null;
        Integer sevQueryLimit = null;
        String sevQueryFilterStartDate = null;
        String sevQueryFilterVoucherType = null;
        File response = api.exportVoucherListCsv(sevQueryModelName, sevQueryObjectName, download, sevQueryLimit, sevQueryFilterStartDate, sevQueryFilterVoucherType);

        // TODO: test validations
    }
    /**
     * Export the voucher list as zip with csv´s
     *
     * Calls voucherZip() in Export.php to export the voucher list as a zip with csv´s.    **Currently there is a problem with swagger understanding return type &#x27;file&#x27;, so the api will respond accordingly but swagger ui can not display it correctly.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportVoucherZipTest() {
        String sevQueryModelName = null;
        String sevQueryObjectName = null;
        Boolean download = null;
        Integer sevQueryLimit = null;
        String sevQueryFilterStartDate = null;
        String sevQueryFilterVoucherType = null;
        File response = api.exportVoucherZip(sevQueryModelName, sevQueryObjectName, download, sevQueryLimit, sevQueryFilterStartDate, sevQueryFilterVoucherType);

        // TODO: test validations
    }
}
